[{"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/index.js":"1","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/reportWebVitals.js":"2","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/App.js":"3","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Menu.js":"4","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Profile.js":"5","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/CheckOrders.js":"6","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/AddProduct.js":"7","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Cart.js":"8","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Products.js":"9","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/ProductView.js":"10","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Signin.js":"11","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Order.js":"12","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Login.js":"13","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/AdminProducts.js":"14"},{"size":642,"mtime":1610470777000,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1607754394000,"results":"17","hashOfConfig":"16"},{"size":514,"mtime":1610469477000,"results":"18","hashOfConfig":"16"},{"size":5417,"mtime":1610645637000,"results":"19","hashOfConfig":"16"},{"size":9715,"mtime":1610647340000,"results":"20","hashOfConfig":"16"},{"size":2263,"mtime":1609085462000,"results":"21","hashOfConfig":"16"},{"size":4173,"mtime":1609248689000,"results":"22","hashOfConfig":"16"},{"size":8410,"mtime":1610647423000,"results":"23","hashOfConfig":"16"},{"size":7417,"mtime":1610643914000,"results":"24","hashOfConfig":"16"},{"size":3205,"mtime":1610646226000,"results":"25","hashOfConfig":"16"},{"size":5458,"mtime":1610475580000,"results":"26","hashOfConfig":"16"},{"size":3835,"mtime":1610645460000,"results":"27","hashOfConfig":"16"},{"size":3325,"mtime":1610475561000,"results":"28","hashOfConfig":"16"},{"size":1281,"mtime":1609227672000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1w5eczn",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/index.js",[],["64","65"],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/reportWebVitals.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/App.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Menu.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Profile.js",["66"],"import React,{Component} from 'react';\nimport {\n  Card, Button, Form, FormGroup, Label, Input,FormText\n} from 'reactstrap';\n\nclass Profile extends Component{\n  state = {\n    userDetails:[],\n    HouseNo:\"\",\n    Street:\"\",\n    LandMark:\"\",\n    Town:\"\",\n    District:\"\",\n    Pincode:\"\",\n    edit:false,\n    name:\"\",\n    mailId:\"\",\n    phoneNo:\"\",\n    error:\"\"\n  };\n\n  componentDidMount(){\n    if(this.props.emailId !== \"\")\n    {\n      const headers = {\n        method:'GET', \n        credentials: 'include'\n      };\n\n      fetch( `http://localhost:3000/users/${this.props.emailId}`, headers)\n        .then(response=>response.json())\n        .then(response=>{\n          this.setState({\n            name:response[0].name,\n            mailId:response[0].mailId,\n            phoneNo:response[0].phoneNo,\n            HouseNo:response[0].address.HouseNo,\n            Street:response[0].address.Street,\n            LandMark:response[0].address.LandMark,\n            Town:response[0].address.Town,\n            District:response[0].address.District,\n            Pincode:response[0].address.Pincode,\n          })\n        })\n        .catch(err=>console.log(err))\n    } \n  }\n\n  editProfile = () => {\n    this.setState({\n      edit:true\n    })\n  }\n\n  uploadProfile = (e) => {\n    e.preventDefault();\n    if(this.state.Street !== null && this.state.LandMark !== null && this.state.Town !== null &&  this.state.District !== null && this.state.Pincode !== 0 && this.state.phoneNo !== 0)\n    {\n      const values = {\n        mailId:this.props.emailId,\n        name:this.state.name,\n        address:{\n          HouseNo:this.state.HouseNo,\n          Street:this.state.Street,\n          LandMark:this.state.LandMark,\n          Town:this.state.Town,\n          District:this.state.District,\n          Pincode:this.state.Pincode\n        },\n        phoneNo:this.state.phoneNo\n      }\n\n      const headers = {\n        method:'PUT', \n        credentials: 'include',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(values)\n      };\n\n      fetch( `http://localhost:3000/users/profile`, headers)\n      .then(response=>response.json())\n      .then(response=>response)\n      .catch(err=>console.log(err))\n\n      this.setState({\n        edit:false,\n        error:\"\"\n      })\n    }\n    else\n    {\n      this.setState({\n        error:\"Enter the required fields\"\n      })\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"container\" >\n        <div className=\"row mt-3\">\n          <h4 className=\" col-8\" style={{color:\"#0b498f\"}}>Profile</h4>\n          {this.state.edit\n                  ? null :\n          <div className=\"buton  text-center\"\n                  onClick={this.editProfile}>Edit Profile</div>}\n        </div>\n          {this.state.edit\n             ? \n             <Card  className=\"col-10 m-1 card shadow bg-white\">\n                <Form className=\"form\" onSubmit={(e) => this.uploadProfile(e)}>\n\n                    <h3 className=\"m-2\">Edit Profile</h3>\n                    <FormGroup row className=\"p-2\">\n                        <Label className=\"col-4 text-center\" for=\"UName\" ><h5>Name:</h5></Label>\n                        <div className=\"col-8 col-md-6 justify-content-center\">\n                            <Input type=\"string\" style={{height:\"2rem\"}} id=\"EmailUNameId\" placeholder=\"Give your Name\"\n                              value={this.state.name} onChange={(e)=>{this.setState({name:e.target.value})}}/>\n                        </div>\n                    </FormGroup>\n                    <h6>Address: </h6>\n\n                    <FormGroup row className=\"p-2\">\n                        <Label className=\"col-4 text-center\" for=\"HNo\" ><h5>HouseNo/FlatNo</h5></Label>\n                        <div className=\"col-8 col-md-6 justify-content-center\">\n                            <Input type=\"string\" style={{height:\"2rem\"}} id=\"HNo\" placeholder=\"Give your Flat No\"\n                            value={this.state.HouseNo} onChange={(e)=>{this.setState({HouseNo:e.target.value})}}/>\n                        </div>\n                    </FormGroup>\n                    \n                    <FormGroup row className=\"p-2\">\n                        <Label className=\"col-4 text-center\" for=\"Street\" ><h5>Street</h5></Label>\n                        <div className=\"col-8 col-md-6 justify-content-center\">\n                            <Input type=\"string\" style={{height:\"2rem\"}} id=\"Street\" placeholder=\"Give your Street\"\n                            value={this.state.Street} onChange={(e)=>{this.setState({Street:e.target.value})}}/>\n                        </div>\n                    </FormGroup>\n\n                    <FormGroup row className=\"p-2\">\n                        <Label className=\"col-4 text-center\" for=\"LandMark\" ><h5>LandMark</h5></Label>\n                        <div className=\"col-8 col-md-6 justify-content-center\">\n                            <Input type=\"string\" style={{height:\"2rem\"}} id=\"LandMark\" placeholder=\"Give your LandMark\"\n                            value={this.state.LandMark} onChange={(e)=>{this.setState({LandMark:e.target.value})}}/>\n                        </div>\n                    </FormGroup>\n\n                    <FormGroup row className=\"p-2\">\n                        <Label className=\"col-4 text-center\" for=\"Town\" ><h5>Town</h5></Label>\n                        <div className=\"col-8 col-md-6 justify-content-center\">\n                            <Input type=\"string\" style={{height:\"2rem\"}} id=\"Town\" placeholder=\"Give your Town\"\n                            value={this.state.Town} onChange={(e)=>{this.setState({Town:e.target.value})}}/>\n                        </div>\n                    </FormGroup>\n\n                    <FormGroup row className=\"p-2\">\n                        <Label className=\"col-4 text-center\" for=\"District\" ><h5>District</h5></Label>\n                        <div className=\"col-8 col-md-6 justify-content-center\">\n                            <Input type=\"string\" style={{height:\"2rem\"}} id=\"District\" placeholder=\"Give your District\"\n                            value={this.state.District} onChange={(e)=>{this.setState({District:e.target.value})}}/>\n                        </div>\n                    </FormGroup>\n\n                    <FormGroup row className=\"p-2\">\n                        <Label className=\"col-4 text-center\" for=\"Pincode\" ><h5>Pincode</h5></Label>\n                        <div className=\"col-8 col-md-6 justify-content-center\">\n                            <Input type=\"string\" style={{height:\"2rem\"}} id=\"Pincode\" placeholder=\"Give your Pincode\"\n                          value={this.state.Pincode} onChange={(e)=>{this.setState({Pincode:e.target.value})}}/>\n                        </div>\n                    </FormGroup>\n\n                    <FormGroup row className=\"p-2\">\n                        <Label className=\"col-4 text-center\" for=\"phoneNo\" ><h5>phoneNo</h5></Label>\n                        <div className=\"col-8 col-md-6 justify-content-center\">\n                            <Input type=\"string\" style={{height:\"2rem\"}} id=\"phoneNo\" placeholder=\"Give your phoneNo\"\n                          value={this.state.phoneNo} onChange={(e)=>{this.setState({phoneNo:e.target.value})}}/>\n                        </div>\n                    </FormGroup>\n                    <FormText><h5>{this.state.error}</h5></FormText>\n                    <FormGroup className=\"row p-2\">\n                        <div className=\"col-4 offset-7\">\n                            <div className=\"buton\"\n                                type = \"submit\" onClick={(e) => this.uploadProfile(e)}>Update</div>\n                        </div>\n                    </FormGroup>\n                </Form>\n                </Card>\n             : \n\n             <Card  className=\"col-10 m-1 card shadow bg-white\">\n               <div className=\"row p-2 m-1\"><div style={{color:\"#0b498f\"}}>Name : </div> <div style={{color:\"#068899\"}}>{this.state.name}</div></div>\n               <div className=\"row p-2 m-1\"><div style={{color:\"#0b498f\"}}>Email-Id : </div> <div style={{color:\"#068899\"}}>{this.state.mailId}</div></div>\n\n               <h5 className=\"row p-2 m-1 text-center\" style={{color:\"#0b498f\"}}>Address: </h5>\n\n               <div className=\"row p-2 m-1\"><div style={{color:\"#0b498f\"}}>HouseNo/FlatNo : </div> <div style={{color:\"#068899\"}}>{this.state.HouseNo}</div></div>\n               <div className=\"row p-2 m-1\"><div style={{color:\"#0b498f\"}}>Street : </div> <div style={{color:\"#068899\"}}>{this.state.Street}</div></div>\n               <div className=\"row p-2 m-1\"><div style={{color:\"#0b498f\"}}>LandMark : </div> <div style={{color:\"#068899\"}}>{this.state.LandMark}</div></div>\n               <div className=\"row p-2 m-1\"><div style={{color:\"#0b498f\"}}>Town : </div> <div style={{color:\"#068899\"}}>{this.state.Town}</div></div>\n               <div className=\"row p-2 m-1\"><div style={{color:\"#0b498f\"}}>District : </div> <div style={{color:\"#068899\"}}>{this.state.District}</div></div>\n               {this.state.Pincode !==0 ? <div className=\"row p-2 m-1\"><div style={{color:\"#0b498f\"}}>Pincode : </div> <div style={{color:\"#068899\"}}>{this.state.Pincode}</div></div>:\n               <div className=\"row p-2 m-1\"><div style={{color:\"#0b498f\"}}>Pincode : </div> <div style={{color:\"#068899\"}}>-</div></div>}\n                 {this.state.phoneNo !==0 ? <div className=\"row p-2 m-1\" > <div style={{color:\"#0b498f\"}}>PhoneNo : </div> <div style={{color:\"#068899\"}}>{this.state.phoneNo}</div></div>:\n                      <div className=\"row p-2 m-1\" > <div style={{color:\"#0b498f\"}}>PhoneNo : </div> <div style={{color:\"#068899\"}}>-</div></div>}\n\n                </Card>\n          }\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/CheckOrders.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/AddProduct.js",["67"],"import React,{Component} from 'react';\nimport {  Button, Form, FormGroup, Label, Input,FormText } from 'reactstrap';\n\nclass AddProduct extends Component{\n\n  state = {\n    name:\"\",\n    flavour:\"\",\n    cost:\"\",\n    quantity:\"\",\n    brand:\"\",\n    imagefile:[]\n  };\n\n  submit = (e) =>{\n   \n    e.preventDefault();\n    console.log(this.state.imagefile);\n    let imageFormObj = new FormData();\n    \n    imageFormObj.append(\"name\",this.state.name);\n    imageFormObj.append(\"flavour\",this.state.flavour);\n    imageFormObj.append(\"cost\",this.state.cost);\n    imageFormObj.append(\"quantity\",this.state.quantity);\n    imageFormObj.append(\"brand\",this.state.brand);\n    imageFormObj.append(\"productimage\",this.state.imagefile);\n\n    const headers = {\n        method:'POST', \n        body: imageFormObj\n    };\n\n    fetch( `http://localhost:3000/products/`,headers)\n    .then(response=>response.json())\n    .catch(err=>console.log(err))\n\n    e.target.reset();\n\n}\n\n\n  render(){\n    return (\n      <div className=\"container\">\n      <Form className=\"form\" onSubmit={(e) => this.submitForm(e)}>\n          <h3 className=\"m-2\">Add Product</h3>\n\n          <FormGroup row className=\"p-2\">\n              <Label className=\"col-4 text-center\" for=\"ProductName\" ><h5>Product Name:</h5></Label>\n              <div className=\"col-8 col-md-6 justify-content-center\">\n                  <Input type=\"string\" style={{height:\"2rem\"}} id=\"ProductName\" placeholder=\"Give Product Name\"\n                   value={this.state.name} onChange={(e)=>{this.setState({name:e.target.value})}} />\n              </div>\n          </FormGroup>\n\n          <FormGroup row className=\"p-2\">\n              <Label className=\"col-4 text-center\" for=\"Flavour\" ><h5>Flavour:</h5></Label>\n              <div className=\"col-8 col-md-6 justify-content-center\">\n                  <Input type=\"string\" style={{height:\"2rem\"}} id=\"Flavour\" placeholder=\"Add Flavour\"\n                  value={this.state.flavour} onChange={(e)=>{this.setState({flavour:e.target.value})}} />\n              </div>\n          </FormGroup>\n\n          <FormGroup row className=\"p-2\">\n              <Label className=\"col-4 text-center\" for=\"Cost\" ><h5>Cost:</h5></Label>\n              <div className=\"col-8 col-md-6 justify-content-center\">\n                  <Input style={{height:\"2rem\"}} id=\"Cost\" type=\"number\"  placeholder=\"Add Cost\"\n                  value={this.state.cost} onChange={(e)=>{this.setState({cost:e.target.value})}} />\n              </div>\n          </FormGroup>\n\n          <FormGroup row className=\"p-2\">\n              <Label className=\"col-4 text-center\" for=\"Quantity\" ><h5>Quantity:</h5></Label>\n              <div className=\"col-8 col-md-6 justify-content-center\">\n                  <Input style={{height:\"2rem\"}} id=\"Quantity\" type=\"number\"  placeholder=\"Add Quantity\"\n                 value={this.state.quantity} onChange={(e)=>{this.setState({quantity:e.target.value})}}/>\n              </div>\n          </FormGroup>\n\n          <FormGroup row className=\"p-2\">\n              <Label className=\"col-4 text-center\" for=\"Brand\" ><h5>Brand:</h5></Label>\n              <div className=\"col-8 col-md-6 justify-content-center\">\n                  <Input type=\"string\" style={{height:\"2rem\"}} id=\"Brand\" placeholder=\"Add Brand\"\n                 value={this.state.brand} onChange={(e)=>{this.setState({brand:e.target.value})}} />\n              </div>\n          </FormGroup>\n\n          <FormGroup row className=\"p-2\">\n              <Label className=\"col-4 text-center\" for=\"Image\" ><h5>Image:</h5></Label>\n              <div className=\"col-8 col-md-6 justify-content-center\">\n                  <Input style={{height:\"3rem\"}} id=\"Image\"\n                   type=\"file\" onChange={(e)=>{this.setState({imagefile:e.target.files[0]})}}/>\n              </div>\n          </FormGroup>\n\n          <FormGroup className=\"row p-2\">\n              <div className=\"col-4 offset-7\">\n                  <Button style={{backgroundColor:\"rgb(50,50,50)\",color:\"floralWhite\"}}\n                      type = \"submit\" onClick={(e) => this.submit(e)}>Add Product</Button>\n              </div>\n          </FormGroup>\n      \n      </Form>\n  \n  </div>\n    );\n  }\n}\n\nexport default AddProduct;\n","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Cart.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Products.js",["68"],"import React,{Component} from 'react';\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle\n} from 'reactstrap';\n\nclass Products extends Component{\n\n  state = {\n        products:[],\n        brand:{},\n        flavour:{},\n        max:\"\",\n        min:\"\",\n        productsWithoutFilters:[],\n        isbrandfilter:false,\n        iscostfilter:false,\n        isflavourfilter:false,\n        isnoresults:false\n  };\n\n  componentDidMount(){\n    const headers = {\n        method:'GET', \n        credentials: 'include'\n    };\n              \n    fetch( `http://localhost:3000/products`, headers)\n      .then(response=>response.json())\n      .then(response=>{\n        this.setState({\n          products:response,\n          productsWithoutFilters:response\n        })\n      })\n      .catch(err=>console.log(err))\n\n    fetch( `http://localhost:3000/products/brands`, headers)\n    .then(response=>response.json())  \n    .then(response=>{\n        let brand={};\n          response.map((res)=>{\n            brand[res] = false;\n            return null;\n          })\n\n          this.setState({\n            brand:brand\n          })\n      })\n    .catch(err=>console.log(err))\n\n    fetch( `http://localhost:3000/products/flavour`, headers)\n    .then(response=>response.json())  \n    .then(response=>{\n      let flavour={};\n      response.map((res)=>{\n        flavour[res] = false;\n        return null;\n      })\n\n      this.setState({\n        flavour:flavour\n      })\n  })\n    .catch(err=>console.log(err))\n  }\n\n  filter = () => {\n    let {productsWithoutFilters,flavour,isflavourfilter,brand,isbrandfilter,iscostfilter} = this.state;\n\n    let flavourproducts = [];\n\n    let i = 0;\n\n    isflavourfilter=false;\n    isbrandfilter = false;\n    iscostfilter = false;\n\n    Object.keys(flavour).map(function(key){\n      if(flavour[key])\n      {\n        isflavourfilter = true;\n        for(let j=0;j<productsWithoutFilters.length;j++)\n        {\n          if(productsWithoutFilters[j].flavour === key)\n          {\n            flavourproducts[i] = productsWithoutFilters[j];\n            i=i+1;\n          }\n        }\n      }\n      return null;\n    })\n\n    if(isflavourfilter)\n    {\n      productsWithoutFilters = flavourproducts\n    }\n\n    let brandproducts = [];\n    i=0;\n    Object.keys(brand).map(function(key){\n      if(brand[key])\n      {\n        isbrandfilter=true; \n        for(let j=0;j<productsWithoutFilters.length;j++)\n        {\n          if(productsWithoutFilters[j].brand === key)\n          {\n            brandproducts[i] = productsWithoutFilters[j];\n            i=i+1;\n          }\n        }\n      }\n      return null;\n    })\n\n    let costproducts = [];\n    if(this.state.min !== \"\" && this.state.max !== \"\")\n    {\n      if((isflavourfilter && isbrandfilter) || isbrandfilter)\n      {\n        productsWithoutFilters = brandproducts;\n      }\n      else if(isflavourfilter)\n      {\n        productsWithoutFilters = flavourproducts\n      }\n  \n\n      i = 0 ;\n      iscostfilter = true;\n      for(let j=0;j<productsWithoutFilters.length;j++){\n          if(productsWithoutFilters[j].cost >= this.state.min && productsWithoutFilters[j].cost <= this.state.max)\n          {\n              costproducts[i] = productsWithoutFilters[j];\n              i = i+1;\n          }   \n      }\n    }\n  \n    this.setState({\n      isbrandfilter:isbrandfilter,\n      iscostfilter:iscostfilter,\n      isflavourfilter:isflavourfilter\n    })\n\n    if((isflavourfilter && isbrandfilter && iscostfilter) || (isbrandfilter && iscostfilter) || (isflavourfilter && iscostfilter) || iscostfilter)\n    {\n      this.setState({\n        products:costproducts\n      })\n    }\n    else if((isbrandfilter && isflavourfilter) || isbrandfilter)\n    {\n      this.setState({\n        products:brandproducts\n      })\n    }\n    else if(isflavourfilter)\n    {\n      this.setState({\n        products:flavourproducts\n      })\n    }\n    else{\n      this.setState({\n        products:productsWithoutFilters\n      })\n    }\n    \n  }\n\n  flavourFilter = (e) => {\n    let {flavour} = this.state\n    flavour[e.target.value] = e.target.checked;\n\n    this.setState({\n      flavour:flavour\n    })\n\n    this.filter();\n  }\n\n  brandFilter = (e) => {\n    let {brand} = this.state;\n    brand[e.target.value] = e.target.checked;\n\n    this.setState({\n      brand:brand\n    })\n\n    this.filter();\n  }\n\n  viewProduct = (product) => {\n    this.props.getViewProduct(product);\n    this.props.history.push(\"/view\")\n  }\n\n  render(){\n    return (\n      <div className=\"container\">\n        <h4 className=\"mt-3\" style={{color:\"#0b498f\"}}>Filters</h4>\n      <div className=\"row p-2\">\n        <div className=\"col-12 col-md-4 p-2\" >\n        <h5>Brand</h5>\n        {\n            Object.keys(this.state.brand).map((brands,i)=>{\n            return(\n              <div key={i} className=\"row\" >\n              <div className=\"col-2 p-2\" >\n              <input type=\"checkbox\" onChange={this.brandFilter} value={brands}/>\n              </div>\n              <div className=\"col-10 p-1\" ><label>{brands}</label>\n              </div>\n              </div>\n            )\n          })\n        }\n        </div>\n        <div className=\"col-12 col-md-4 p-2\" >\n        <h5>Flavour</h5>\n        {\n          Object.keys(this.state.flavour).map((flavour,i)=>{\n            return(\n              <div key={i} className=\"row\" >\n              <div className=\"col-2 p-2\" >\n              <input type=\"checkbox\" onChange={this.flavourFilter} value={flavour}/>\n              </div>\n              <div className=\"col-10 p-1\" > <label>{flavour}</label>\n              </div>\n              </div>\n            ) \n          })\n        }\n        </div>\n        <div className=\"col-12 col-md-4 p-2\" >\n        <h5>Cost</h5>\n        <div className=\"row\" >\n        <div className=\"col-6 p-2\" >\n        <label>Min</label>\n        </div>\n        <div className=\"col-6 p-2\" >\n        <input type=\"number\" value={this.state.min} onChange={(e)=>{this.setState({min:e.target.value,iscostfilter:false})}}/>\n        </div>\n        </div>\n        <div className=\"row\" >\n        <div className=\"col-6 p-2\" >\n        <label>Max</label>\n        </div>\n        <div className=\"col-6 p-2\" >\n        <input type=\"number\" value={this.state.max} onChange={(e)=>{this.setState({max:e.target.value,iscostfilter:false})}}/>\n        </div>\n        </div>\n        <div className=\"col-4 offset-7\">\n                  <div className=\"buton\" onClick={this.filter}>Apply</div>\n        </div>\n        </div>\n     <div className=\"container\" >\n      <div className=\"row justify-content-center\">\n        {\n          this.state.products.length === 0  ? <div>No results found</div>\n              :  this.state.products.map((product,i)=>{\n        return(\n          <Card  key={i}  className=\"col-md-3 m-3 card shadow bg-white text-center\" onClick={()=>{this.viewProduct(product)}}>\n          <CardImg className=\"p-3\" style={{height:\"190px\"}} src={`/${product.img}`} alt=\"product-img\" />\n          <CardBody>\n            <CardTitle tag=\"h5\" style={{color:\"#0b498f\"}}>{product.name}</CardTitle>\n            <CardSubtitle tag=\"h6\" className=\"text-muted\">{product.brand}</CardSubtitle>\n            <CardText><div>{product.flavour}</div>\n                      <h5 style={{color:\"#0b498f\"}}>₹ {product.cost}</h5></CardText>\n          </CardBody>\n          </Card>   \n        )})\n        }\n        </div>\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Products;\n","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/ProductView.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Signin.js",["69"],"import React,{Component} from 'react';\nimport {  Button, Form, FormGroup, Label, Input,FormText} from 'reactstrap';\n\nclass Signin extends Component{\n  state = {\n    name:\"\",\n    mailId:\"\",\n    pass:\"\",\n    NameError:\"\",\n    EmailError:\"\",\n    PassError:\"\",\n    signin:[],\n    login:false,\n    EmailValid:\"\",\n    NameValud:\"\",\n    PassValid:\"\"\n  };\n\n  submit= (e) =>{\n    e.preventDefault();\n    let error = 0;\n    if(this.state.name===\"\")\n    {\n      error=1;\n      this.setState({\n      NameError:\"Must Enter Inputs\"\n      })\n    }\n    if(this.state.mailId===\"\")\n    {\n      error=1;\n      this.setState({\n      EmailError:\"Must Enter Inputs\"\n      })\n    }\n    if(this.state.pass===\"\")\n    {\n      error=1;\n      this.setState({\n      PassError:\"Must Enter Inputs\"\n      })\n    }\n\n    if(error===0 && this.state.EmailError === \"\" && this.state.NameError === \"\" && this.state.PassError === \"\")\n    {\n        this.props.getEmail(this.state.mailId);\n        \n        const values = {\n          name: this.state.name,\n          mailId: this.state.mailId,\n          passWord: this.state.pass,\n          address:{\n            HouseNo:\"\",\n            Street:\"\",\n            LandMark:\"\",\n            Town:\"\",\n            District:\"\",\n            Pincode:0\n           },\n           phoneNo:0\n        }\n\n        const headers = {\n          method:'POST', \n          credentials: 'include',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(values)\n        };\n\n    fetch( `http://localhost:3000/users`, headers)\n        .then(response=>response.json())\n        .catch((err)=>{\n        console.log(err)\n        this.setState({\n            EmailError:\"Already exist\"\n        });\n        })\n\n        this.props.history.push('./');\n    }\n  }\n\n  handleEmailChange = (e) => {\n    this.setState({\n      mailId:e.target.value\n    })\n    if(this.state.mailId.length<5)\n    {\n      this.setState({\n      EmailError:\"Email must be at the Correct format\",\n      EmailValid:\"\"\n      })\n    }\n    else {\n      this.setState({\n      EmailError:\"\",\n      EmailValid:\"valid\"\n      })\n    }\n\n  }\n\n  handleNameChange = (e) => {\n    let alph=/^[a-zA-Z]+$/\n    this.setState({\n      name:e.target.value\n    })\n    if(this.state.name.length<4)\n    {\n      this.setState({\n      NameError:\"Username needs to be atleast 5 characters long\",\n      NameValid:\"\"\n      })\n    }\n    else if(!(alph.test(this.state.name))){\n      this.setState({\n      NameError:\"Must be an alphabetics only\",\n      NameValid:\"\",\n      })\n    }\n    else{\n      this.setState({\n      NameError:\"\",\n      NameValid:\"valid\"\n      })\n    }\n  }\n\n  handlePassChange = (e) => {\n    let passRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/\n    this.setState({\n      pass:e.target.value\n    })\n    if(this.state.pass.length<6)\n    {\n      this.setState({\n        PassError:\"Must 6 letters\",\n        PassValid:\"\"\n      })\n    }\n    else if(!(passRegex.test(this.state.pass))){\n      this.setState({\n        PassError:\"Must had Capital,Small and Numeric letters\",\n        PassValid:\"\"\n      })\n    }\n    else {\n      this.setState({\n         PassError:\"\",\n         PassValid:\"valid\"\n      })\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"container pt-5\">\n      <Form className=\"login\" onSubmit={(e) => this.submit(e)}>\n          <h3 className=\"m-2\">Signin</h3>\n          \n          <FormText color=\"white\">{this.state.loginError}</FormText>\n\n          <FormGroup row className=\"p-2\">\n              <Label className=\"col-4 text-center\" for=\"EmailId\" ><h5>Email-Id:</h5></Label>\n              <div className=\"col-8 col-md-6 justify-content-center\">\n                  <Input type=\"string\" style={{height:\"2rem\"}} id=\"EmailId\" placeholder=\"Give your Email Id\"\n                     value={this.state.mailId} onChange={this.handleEmailChange} valid={this.state.EmailValid}/>\n                  <FormText color=\"white\">{this.state.EmailError}</FormText>\n              </div>\n          </FormGroup>\n        \n          <FormGroup row className=\"p-2\">\n              <Label className=\"col-4 text-center\" for=\"Username\" ><h5>Username:</h5></Label>\n              <div className=\"col-8 col-md-6 justify-content-center\">\n                  <Input type=\"string\" style={{height:\"2rem\"}} id=\"Username\" placeholder=\"Give your Username\"\n                     value={this.state.name} onChange={this.handleNameChange} valid={this.state.NameValid}/>\n                  <FormText color=\"white\">{this.state.NameError}</FormText>\n              </div>\n          </FormGroup>\n          \n          <FormGroup row className=\"p-2\">\n              <Label className=\"col-4 text-center\" for=\"Password\" ><h5>Password:</h5></Label>\n              <div className=\"col-8 col-md-6 justify-content-center\">\n                  <Input type=\"password\" style={{height:\"2rem\"}} id=\"Password\" placeholder=\"Give your Password\"\n                     value={this.state.pass} onChange={this.handlePassChange}  valid={this.state.PassValid}/>\n                  <FormText color=\"white\">{this.state.PassError}</FormText>\n              </div>\n          </FormGroup>\n          <FormGroup className=\"row p-2\">\n              <div className=\"col-4 offset-7\">\n                  <div className=\"buton\" type = \"submit\" onClick={this.submit}>Signin</div>\n              </div>\n          </FormGroup>\n          <h5>Already user?<a href=\"/login\" style={{color:\"#1a2980\"}}> Login</a></h5>\n      </Form>\n  \n  </div>\n    );\n  }\n}\n\nexport default Signin;\n","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Order.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Login.js",["70"],"import React,{Component} from 'react';\nimport {  Button, Form, FormGroup, Label, Input,FormText } from 'reactstrap';\nclass Login extends Component{\n  state = {\n    mailId:\"\",\n    pass:\"\",\n    EmailError:\"\",\n    PassError:\"\",\n    login:[],\n    loginError:\"\",\n    istrue:false\n  };\n\n  submit= (e) =>{   \n    e.preventDefault();\n    let error = 0;\n    if(this.state.mailId===\"\")\n    {\n      error=1;\n      this.setState({\n      EmailError:\"Must Enter Inputs\"\n      })\n    }\n    if(this.state.pass===\"\")\n    {\n      error=1;\n      this.setState({\n      PassError:\"Must Enter Inputs\"\n      })\n    }\n\n    if(error === 0)\n    {\n        const headers = {\n          method:'GET', \n          credentials: 'include'\n        };\n          \n        fetch( `http://localhost:3000/users/${this.state.mailId}/${this.state.pass}`, headers)\n          .then(response=>response.json())\n          .then(response=>{\n            if(response.length > 0)\n            {\n              this.props.getEmail(this.state.mailId);\n              if(this.state.mailId === \"Admin@gmail.com\")\n              {\n                this.props.history.push('./adminproducts');\n              }\n              else\n                 this.props.history.push('./');\n            }\n            else{\n              this.setState({\n                loginError:\"Incorrect username and password\"\n              })\n            }\n          })\n          .catch(err=>console.log(err))\n    }\n  }\n\n  handleEmailChange = (e) => {\n    this.setState({\n      mailId:e.target.value\n    })\n  }\n\n  handlePassChange = (e) => {\n    this.setState({\n      pass:e.target.value\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"container pt-5\">\n      <Form className=\"login\" onSubmit={(e) => this.submit(e)}>\n          <h3 className=\"m-2\" >Login</h3>\n\n          <FormText color=\"white\">{this.state.loginError}</FormText>\n          \n          <FormGroup row className=\"p-2\">\n              <Label className=\"col-4 text-center\" for=\"EmailId\"  ><h5>Email-Id:</h5></Label>\n              <div className=\"col-8 col-md-6 justify-content-center\">\n                  <Input type=\"string\" style={{height:\"2rem\"}} id=\"EmailId\" placeholder=\"Give your Email Id\"\n                     value={this.state.mailId} onChange={this.handleEmailChange} />\n                  <FormText color=\"white\">{this.state.EmailError}</FormText>\n              </div>\n          </FormGroup>\n          \n          <FormGroup row className=\"p-2\">\n              <Label className=\"col-4 text-center\" for=\"Password\" ><h5>Password:</h5></Label>\n              <div className=\"col-8 col-md-6 justify-content-center\">\n                  <Input  type=\"password\" style={{height:\"2rem\"}} id=\"Password\" placeholder=\"Give your Password\"\n                     value={this.state.pass} onChange={this.handlePassChange} />\n                  <FormText color=\"white\" className=\"text-center p-1\">{this.state.PassError}</FormText>\n              </div>\n          </FormGroup>\n         \n          <FormGroup className=\"row p-2\">\n              <div className=\"col-4 offset-7\">\n                  <div className=\"buton\" type = \"submit\" onClick={this.submit}>Login</div>\n              </div>\n          </FormGroup>\n          <h5>New user?<a href=\"/signin\" style={{color:\"#1a2980\"}}> Signin</a></h5>\n      </Form>\n      \n  </div>\n    );\n  }\n}\n\nexport default Login;\n","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/AdminProducts.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":3,"column":9,"nodeType":"77","messageId":"78","endLine":3,"endColumn":15},{"ruleId":"75","severity":1,"message":"79","line":2,"column":49,"nodeType":"77","messageId":"78","endLine":2,"endColumn":57},{"ruleId":"75","severity":1,"message":"76","line":4,"column":28,"nodeType":"77","messageId":"78","endLine":4,"endColumn":34},{"ruleId":"75","severity":1,"message":"76","line":2,"column":11,"nodeType":"77","messageId":"78","endLine":2,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":2,"column":11,"nodeType":"77","messageId":"78","endLine":2,"endColumn":17},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'FormText' is defined but never used.","no-global-assign","no-unsafe-negation"]