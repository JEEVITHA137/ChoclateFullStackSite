[{"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/index.js":"1","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/App.js":"2","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/reportWebVitals.js":"3","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Signin.js":"4","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Login.js":"5","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Products.js":"6","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/AddProduct.js":"7","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/ProductView.js":"8","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Cart.js":"9","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Profile.js":"10","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Menu.js":"11","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Order.js":"12"},{"size":500,"mtime":1607754394000,"results":"13","hashOfConfig":"14"},{"size":2059,"mtime":1608816864000,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607754394000,"results":"16","hashOfConfig":"14"},{"size":3224,"mtime":1608645429000,"results":"17","hashOfConfig":"14"},{"size":1984,"mtime":1608660035000,"results":"18","hashOfConfig":"14"},{"size":6272,"mtime":1608660065000,"results":"19","hashOfConfig":"14"},{"size":1907,"mtime":1608126350000,"results":"20","hashOfConfig":"14"},{"size":2107,"mtime":1608819339000,"results":"21","hashOfConfig":"14"},{"size":4688,"mtime":1608818695000,"results":"22","hashOfConfig":"14"},{"size":261,"mtime":1608708377000,"results":"23","hashOfConfig":"14"},{"size":522,"mtime":1608816880000,"results":"24","hashOfConfig":"14"},{"size":1968,"mtime":1608818371000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1fxv2et",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/index.js",[],["53","54"],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/App.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/reportWebVitals.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Signin.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Login.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Products.js",["55"],"import React,{Component} from 'react';\n\nclass Products extends Component{\n\n  state = {\n        products:[],\n        brand:{},\n        flavour:{},\n        max:\"\",\n        min:\"\",\n        productsWithoutFilters:[],\n        isbrandfilter:false,\n        iscostfilter:false,\n        isflavourfilter:false,\n        isnoresults:false\n  };\n\n  componentDidMount(){\n    const headers = {\n        method:'GET', \n        credentials: 'include'\n    };\n              \n    fetch( `http://localhost:3000/products`, headers)\n      .then(response=>response.json())\n      .then(response=>{\n        this.setState({\n          products:response,\n          productsWithoutFilters:response\n        })\n      })\n      .catch(err=>console.log(err))\n\n    fetch( `http://localhost:3000/products/brands`, headers)\n    .then(response=>response.json())  \n    .then(response=>{\n        let brand={};\n          response.map((res)=>{\n            brand[res] = false;\n            return null;\n          })\n\n          this.setState({\n            brand:brand\n          })\n      })\n    .catch(err=>console.log(err))\n\n    fetch( `http://localhost:3000/products/flavour`, headers)\n    .then(response=>response.json())  \n    .then(response=>{\n      let flavour={};\n      response.map((res)=>{\n        flavour[res] = false;\n        return null;\n      })\n\n      this.setState({\n        flavour:flavour\n      })\n  })\n    .catch(err=>console.log(err))\n  }\n\n  filter = () => {\n    let {productsWithoutFilters,flavour,isflavourfilter,brand,isbrandfilter,iscostfilter} = this.state;\n\n    let flavourproducts = [];\n\n    let i = 0;\n\n    isflavourfilter=false;\n    isbrandfilter = false;\n    iscostfilter = false;\n\n    Object.keys(flavour).map(function(key){\n      if(flavour[key])\n      {\n        isflavourfilter = true;\n        for(let j=0;j<productsWithoutFilters.length;j++)\n        {\n          if(productsWithoutFilters[j].flavour === key)\n          {\n            flavourproducts[i] = productsWithoutFilters[j];\n            i=i+1;\n          }\n        }\n      }\n      return null;\n    })\n\n    if(isflavourfilter)\n    {\n      productsWithoutFilters = flavourproducts\n    }\n\n    let brandproducts = [];\n    i=0;\n    Object.keys(brand).map(function(key){\n      if(brand[key])\n      {\n        isbrandfilter=true; \n        for(let j=0;j<productsWithoutFilters.length;j++)\n        {\n          if(productsWithoutFilters[j].brand === key)\n          {\n            brandproducts[i] = productsWithoutFilters[j];\n            i=i+1;\n          }\n        }\n      }\n      return null;\n    })\n\n    let costproducts = [];\n    if(this.state.min !== \"\" && this.state.max !== \"\")\n    {\n      if((isflavourfilter && isbrandfilter) || isbrandfilter)\n      {\n        productsWithoutFilters = brandproducts;\n      }\n      else if(isflavourfilter)\n      {\n        productsWithoutFilters = flavourproducts\n      }\n  \n\n      i = 0 ;\n      iscostfilter = true;\n      for(let j=0;j<productsWithoutFilters.length;j++){\n          if(productsWithoutFilters[j].cost >= this.state.min && productsWithoutFilters[j].cost <= this.state.max)\n          {\n              costproducts[i] = productsWithoutFilters[j];\n              i = i+1;\n          }   \n      }\n    }\n  \n    this.setState({\n      isbrandfilter:isbrandfilter,\n      iscostfilter:iscostfilter,\n      isflavourfilter:isflavourfilter\n    })\n\n    if((isflavourfilter && isbrandfilter && iscostfilter) || (isbrandfilter && iscostfilter) || (isflavourfilter && iscostfilter) || iscostfilter)\n    {\n      this.setState({\n        products:costproducts\n      })\n    }\n    else if((isbrandfilter && isflavourfilter) || isbrandfilter)\n    {\n      this.setState({\n        products:brandproducts\n      })\n    }\n    else if(isflavourfilter)\n    {\n      this.setState({\n        products:flavourproducts\n      })\n    }\n    else{\n      this.setState({\n        products:productsWithoutFilters\n      })\n    }\n    \n  }\n\n  flavourFilter = (e) => {\n    let {flavour} = this.state\n    flavour[e.target.value] = e.target.checked;\n\n    this.setState({\n      flavour:flavour\n    })\n\n    this.filter();\n  }\n\n  brandFilter = (e) => {\n    let {brand} = this.state;\n    brand[e.target.value] = e.target.checked;\n\n    this.setState({\n      brand:brand\n    })\n\n    this.filter();\n  }\n\n  viewProduct = (product) => {\n    this.props.getViewProduct(product);\n    this.props.history.push(\"/view\")\n  }\n\n  render(){\n    return (\n      <div>\n        <div onClick={()=>{this.props.history.push('./cart')}}>Cart</div>\n        <h2>Filters</h2>\n        <div>\n        <h3>Brand</h3>\n        {\n            Object.keys(this.state.brand).map((brands,i)=>{\n            return(\n              <div key={i}>\n              <input type=\"checkbox\" onChange={this.brandFilter} value={brands}/><label>{brands}</label>\n              </div>\n            )\n          })\n        }\n        </div>\n        <div>\n        <h3>Flavour</h3>\n        {\n          Object.keys(this.state.flavour).map((flavour,i)=>{\n            return(\n              <div key={i}>\n              <input type=\"checkbox\" onChange={this.flavourFilter} value={flavour}/><label>{flavour}</label>\n              </div>\n            )     \n          })\n        }\n        </div>\n        <div>\n        <h3>Cost</h3>\n        <label>Min</label><input type=\"number\" value={this.state.min} onChange={(e)=>{this.setState({min:e.target.value,iscostfilter:false})}}/>\n        <label>Max</label><input type=\"number\" value={this.state.max} onChange={(e)=>{this.setState({max:e.target.value,iscostfilter:false})}}/>\n        <button onClick={this.filter}>Go</button>\n        </div>\n        <h1>Products</h1>\n        <div className=\"d-flex\">\n        {\n          this.state.products.length === 0  ? <div>No results found</div>\n              :  this.state.products.map((product,i)=>{\n                  return(\n                    <div key={i} onClick={()=>{this.viewProduct(product)}}>\n                    <img src={`/${product.img}`} style={{width:\"180px\",height:\"180px\"}} alt=\"product-image\"></img>\n                    <div>{product.name}</div>\n                    <div>{product.brand}</div>\n                    <div>{product.flavour}</div>\n                    <div>{product.cost}</div>\n                  </div>\n                )})\n        }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Products;\n","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/AddProduct.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/ProductView.js",["56"],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Cart.js",["57"],"import React,{Component} from 'react';\n\nclass Cart extends Component{\n  state={\n    cart:[],\n    orders:[]\n  }\n\n\n  componentDidMount(){\n    if(this.props.emailId !== \"\")\n    {\n      const headers = {\n        method:'GET', \n        credentials: 'include'\n      };\n  \n      fetch( `http://localhost:3000/users/${this.props.emailId}`, headers)\n      .then(response=>response.json())\n      .then(response=>{\n        this.setState({\n          cart:response[0].myCart,\n          orders:response[0].myorders\n        })\n      })\n      .catch(err=>console.log(err))\n    } \n  }\n\n  // available = (quantity,id,i) =>{\n  //   let {cart} = this.state;\n\n  //   const headers = {\n  //     method:'GET', \n  //     credentials: 'include'\n  //   };\n\n  //   fetch( `http://localhost:3000/products/${id}`, headers)\n  //   .then(response=>response.json())\n  //   .then(response=>{\n  //     if(quantity+1 <= response[0].quantity)\n  //     {\n  //       cart[i].quantity += 1;\n  //     }\n  //     else\n  //     {\n  //       console.log(\"unavailable\")\n  //     }\n  //   })\n  //   .catch(err=>console.log(err))\n\n  //   this.setState({\n  //     cart:cart\n  //   })\n\n\n  // }\n\n  order = (e) => {\n    let cartproduct=[];\n    cartproduct = this.state.cart.filter(p => p._id !== e._id)\n\n    console.log(e);\n\n    this.setState({\n      order:[...this.state.orders,e],\n      cart:cartproduct\n    })\n\n    console.log(this.state.cart)\n    const values = {\n      UserId:this.props.emailId,\n      Tracking:false,\n      ProductId:e._id,\n      Address:{\n        Street:\" River\",\n        LandMark: \"Police Station\",\n        Town:\"Vellore\",\n        District:\"Vellore\",\n        Pincode:632107\n    }\n    }\n\n    const headers = {\n      method:'POST', \n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n      body:JSON.stringify(values)\n    };\n\n    fetch( `http://localhost:3000/order/`, headers)\n    .then(response=>response.json())\n    .then(response=>response)\n    .catch(err=>console.log(err))\n\n\n    const orderValues = {\n      mailId:this.props.emailId,\n      order:this.state.orders.concat(e)\n    }\n\n    const orderHeaders = {\n      method:'PUT', \n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(orderValues)\n    };\n    \n    console.log(orderHeaders.body)\n\n    fetch( `http://localhost:3000/users/order`, orderHeaders)\n    .then(response=>response.json())\n    .then(response=>response)\n    .catch(err=>console.log(err))\n\n    const cartValues = {\n      mailId:this.props.emailId,\n      cart:cartproduct\n    }\n\n\n    const cartHeaders = {\n      method:'PUT', \n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(cartValues)\n    };\n\n    fetch( `http://localhost:3000/users/addtocart`, cartHeaders)\n    .then(response=>response.json())\n    .then(response=>response)\n    .catch(err=>console.log(err))\n  }\n\n\n  delete = (e) => {\n    let cartproduct = this.state.cart.filter(p => p._id !== e._id)\n\n    this.setState({\n      order:[...this.state.orders,e],\n      cart:cartproduct\n    })\n\n    const cartValues = {\n      mailId:this.props.emailId,\n      cart:cartproduct\n    }\n\n    const cartHeaders = {\n      method:'PUT', \n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(cartValues)\n    };\n\n    fetch( `http://localhost:3000/users/addtocart`, cartHeaders)\n    .then(response=>response.json())\n    .then(response=>response)\n    .catch(err=>console.log(err))\n  }\n\n  render(){\n    return (\n      <div>\n        <h1>Cart</h1>\n        <div className=\"d-flex\">\n        {\n          this.state.cart.length === 0  ? <div>Cart is Empty</div>\n              :  this.state.cart.map((product,i)=>{\n                  return(\n                    <div key={i}>\n                    <img src={`/${product.img}`} style={{width:\"180px\",height:\"180px\"}} alt=\"product-image\"></img>\n                    <div>{product.name}</div>\n                    <div>{product.brand}</div>\n                    <div>{product.flavour}</div>\n                    <div>{product.cost}</div>\n                    <div className=\"d-flex\">\n                       <button>+</button>\n                       <div>{product.quantity}</div>\n                       <button>-</button>\n                    </div>\n                    <button onClick={()=>{this.order(product)}}>Buy Now</button><br/>\n                    <button onClick={()=>{this.delete(product)}}>Delete</button>\n                  </div>\n                )})\n        }\n        </div>\n        <div onClick={()=>{this.props.history.push('./orders')}}>Order</div>\n      </div>\n    );\n  }\n}\n\nexport default Cart;\n","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Profile.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Menu.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Order.js",["58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":240,"column":21,"nodeType":"65","endLine":240,"endColumn":109},{"ruleId":"63","severity":1,"message":"64","line":77,"column":9,"nodeType":"65","endLine":77,"endColumn":112},{"ruleId":"63","severity":1,"message":"64","line":172,"column":21,"nodeType":"65","endLine":172,"endColumn":109},{"ruleId":"63","severity":1,"message":"64","line":64,"column":21,"nodeType":"65","endLine":64,"endColumn":109},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]