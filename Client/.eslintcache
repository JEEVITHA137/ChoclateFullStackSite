[{"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/index.js":"1","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/App.js":"2","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/reportWebVitals.js":"3","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Signin.js":"4","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Login.js":"5","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Products.js":"6","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/AddProduct.js":"7","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/ProductView.js":"8","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Cart.js":"9","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Profile.js":"10","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Menu.js":"11","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Order.js":"12","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/AdminProducts.js":"13","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/CheckOrders.js":"14"},{"size":500,"mtime":1607754394000,"results":"15","hashOfConfig":"16"},{"size":2466,"mtime":1608921242000,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1607754394000,"results":"18","hashOfConfig":"16"},{"size":3420,"mtime":1608918971000,"results":"19","hashOfConfig":"16"},{"size":1924,"mtime":1608831062000,"results":"20","hashOfConfig":"16"},{"size":6352,"mtime":1608902275000,"results":"21","hashOfConfig":"16"},{"size":1907,"mtime":1608126350000,"results":"22","hashOfConfig":"16"},{"size":2154,"mtime":1608908888000,"results":"23","hashOfConfig":"16"},{"size":6158,"mtime":1608919802000,"results":"24","hashOfConfig":"16"},{"size":4621,"mtime":1608920258000,"results":"25","hashOfConfig":"16"},{"size":876,"mtime":1608921305000,"results":"26","hashOfConfig":"16"},{"size":3346,"mtime":1608901266000,"results":"27","hashOfConfig":"16"},{"size":1325,"mtime":1608920943000,"results":"28","hashOfConfig":"16"},{"size":173,"mtime":1608921197000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1fxv2et",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/index.js",[],["62","63"],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/App.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/reportWebVitals.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Signin.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Login.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Products.js",["64"],"import React,{Component} from 'react';\n\nclass Products extends Component{\n\n  state = {\n        products:[],\n        brand:{},\n        flavour:{},\n        max:\"\",\n        min:\"\",\n        productsWithoutFilters:[],\n        isbrandfilter:false,\n        iscostfilter:false,\n        isflavourfilter:false,\n        isnoresults:false\n  };\n\n  componentDidMount(){\n    const headers = {\n        method:'GET', \n        credentials: 'include'\n    };\n              \n    fetch( `http://localhost:3000/products`, headers)\n      .then(response=>response.json())\n      .then(response=>{\n        this.setState({\n          products:response,\n          productsWithoutFilters:response\n        })\n      })\n      .catch(err=>console.log(err))\n\n    fetch( `http://localhost:3000/products/brands`, headers)\n    .then(response=>response.json())  \n    .then(response=>{\n        let brand={};\n          response.map((res)=>{\n            brand[res] = false;\n            return null;\n          })\n\n          this.setState({\n            brand:brand\n          })\n      })\n    .catch(err=>console.log(err))\n\n    fetch( `http://localhost:3000/products/flavour`, headers)\n    .then(response=>response.json())  \n    .then(response=>{\n      let flavour={};\n      response.map((res)=>{\n        flavour[res] = false;\n        return null;\n      })\n\n      this.setState({\n        flavour:flavour\n      })\n  })\n    .catch(err=>console.log(err))\n  }\n\n  filter = () => {\n    let {productsWithoutFilters,flavour,isflavourfilter,brand,isbrandfilter,iscostfilter} = this.state;\n\n    let flavourproducts = [];\n\n    let i = 0;\n\n    isflavourfilter=false;\n    isbrandfilter = false;\n    iscostfilter = false;\n\n    Object.keys(flavour).map(function(key){\n      if(flavour[key])\n      {\n        isflavourfilter = true;\n        for(let j=0;j<productsWithoutFilters.length;j++)\n        {\n          if(productsWithoutFilters[j].flavour === key)\n          {\n            flavourproducts[i] = productsWithoutFilters[j];\n            i=i+1;\n          }\n        }\n      }\n      return null;\n    })\n\n    if(isflavourfilter)\n    {\n      productsWithoutFilters = flavourproducts\n    }\n\n    let brandproducts = [];\n    i=0;\n    Object.keys(brand).map(function(key){\n      if(brand[key])\n      {\n        isbrandfilter=true; \n        for(let j=0;j<productsWithoutFilters.length;j++)\n        {\n          if(productsWithoutFilters[j].brand === key)\n          {\n            brandproducts[i] = productsWithoutFilters[j];\n            i=i+1;\n          }\n        }\n      }\n      return null;\n    })\n\n    let costproducts = [];\n    if(this.state.min !== \"\" && this.state.max !== \"\")\n    {\n      if((isflavourfilter && isbrandfilter) || isbrandfilter)\n      {\n        productsWithoutFilters = brandproducts;\n      }\n      else if(isflavourfilter)\n      {\n        productsWithoutFilters = flavourproducts\n      }\n  \n\n      i = 0 ;\n      iscostfilter = true;\n      for(let j=0;j<productsWithoutFilters.length;j++){\n          if(productsWithoutFilters[j].cost >= this.state.min && productsWithoutFilters[j].cost <= this.state.max)\n          {\n              costproducts[i] = productsWithoutFilters[j];\n              i = i+1;\n          }   \n      }\n    }\n  \n    this.setState({\n      isbrandfilter:isbrandfilter,\n      iscostfilter:iscostfilter,\n      isflavourfilter:isflavourfilter\n    })\n\n    if((isflavourfilter && isbrandfilter && iscostfilter) || (isbrandfilter && iscostfilter) || (isflavourfilter && iscostfilter) || iscostfilter)\n    {\n      this.setState({\n        products:costproducts\n      })\n    }\n    else if((isbrandfilter && isflavourfilter) || isbrandfilter)\n    {\n      this.setState({\n        products:brandproducts\n      })\n    }\n    else if(isflavourfilter)\n    {\n      this.setState({\n        products:flavourproducts\n      })\n    }\n    else{\n      this.setState({\n        products:productsWithoutFilters\n      })\n    }\n    \n  }\n\n  flavourFilter = (e) => {\n    let {flavour} = this.state\n    flavour[e.target.value] = e.target.checked;\n\n    this.setState({\n      flavour:flavour\n    })\n\n    this.filter();\n  }\n\n  brandFilter = (e) => {\n    let {brand} = this.state;\n    brand[e.target.value] = e.target.checked;\n\n    this.setState({\n      brand:brand\n    })\n\n    this.filter();\n  }\n\n  viewProduct = (product) => {\n    this.props.getViewProduct(product);\n    this.props.history.push(\"/view\")\n  }\n\n  render(){\n    return (\n      <div>\n        <div onClick={()=>{this.props.history.push('./cart')}}>Cart</div>\n        <div onClick={()=>{this.props.history.push('./profile')}}>Profile</div>\n        <h2>Filters</h2>\n        <div>\n        <h3>Brand</h3>\n        {\n            Object.keys(this.state.brand).map((brands,i)=>{\n            return(\n              <div key={i}>\n              <input type=\"checkbox\" onChange={this.brandFilter} value={brands}/><label>{brands}</label>\n              </div>\n            )\n          })\n        }\n        </div>\n        <div>\n        <h3>Flavour</h3>\n        {\n          Object.keys(this.state.flavour).map((flavour,i)=>{\n            return(\n              <div key={i}>\n              <input type=\"checkbox\" onChange={this.flavourFilter} value={flavour}/><label>{flavour}</label>\n              </div>\n            )     \n          })\n        }\n        </div>\n        <div>\n        <h3>Cost</h3>\n        <label>Min</label><input type=\"number\" value={this.state.min} onChange={(e)=>{this.setState({min:e.target.value,iscostfilter:false})}}/>\n        <label>Max</label><input type=\"number\" value={this.state.max} onChange={(e)=>{this.setState({max:e.target.value,iscostfilter:false})}}/>\n        <button onClick={this.filter}>Go</button>\n        </div>\n        <h1>Products</h1>\n        <div className=\"d-flex\">\n        {\n          this.state.products.length === 0  ? <div>No results found</div>\n              :  this.state.products.map((product,i)=>{\n                  return(\n                    <div key={i} onClick={()=>{this.viewProduct(product)}}>\n                    <img src={`/${product.img}`} style={{width:\"180px\",height:\"180px\"}} alt=\"product-image\"></img>\n                    <div>{product.name}</div>\n                    <div>{product.brand}</div>\n                    <div>{product.flavour}</div>\n                    <div>{product.cost}</div>\n                  </div>\n                )})\n        }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Products;\n","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/AddProduct.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/ProductView.js",["65"],"import React,{Component} from 'react';\n\nclass ProductView extends Component{\n  state={\n    cart:[],\n    cartvalue:[]\n  }\n\n  componentDidMount(){\n    if(this.props.emailId !== \"\")\n    {\n      const headers = {\n        method:'GET', \n        credentials: 'include'\n      };\n  \n      fetch( `http://localhost:3000/users/${this.props.emailId}`, headers)\n      .then(response=>response.json())\n      .then(response=>{\n        this.setState({\n          cart:response[0].myCart\n        })\n      })\n      .catch(err=>console.log(err))\n    }\n\n  }\n\n  ispresentincart = (e) => {\n\n    let existingproduct = this.state.cart.filter(p => p._id === e)\n    if(existingproduct.length > 0)\n    {\n      return true;\n    }\n    else{\n      return false;\n    }\n   \n  }\n  \n  AddCart=(e)=>{\n    if(this.props.emailId !== \"\")\n    {\n      e.quantity = 1;\n      this.setState({\n        cart:[...this.state.cart,e]\n      });\n\n      const values = {\n        mailId:this.props.emailId,\n        cart:this.state.cart.concat(e)\n      }\n\n      const headers = {\n        method:'PUT', \n        credentials: 'include',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(values)\n      };\n  \n      fetch( `http://localhost:3000/users/addtocart`, headers)\n      .then(response=>response.json())\n      .then(response=>response)\n      .catch(err=>console.log(err))\n    }\n  }\n\n  render(){\n    return (\n      <div>\n        <h1>Product View</h1>\n        <div onClick={()=>{this.props.history.push('./cart')}}>Cart</div>\n        <img src={`/${this.props.viewproduct.img}`} style={{width:\"180px\",height:\"180px\"}} alt=\"product-image\"></img>\n        <div>{this.props.viewproduct.name}</div>\n        <div>{this.props.viewproduct.brand}</div>\n        <div>{this.props.viewproduct.flavour}</div>\n        <div>{this.props.viewproduct.cost}</div>\n        {\n        \n          this.ispresentincart(this.props.viewproduct._id) === true ?<button>In Cart</button> : this.props.viewproduct.quantity !== 0 ? <button onClick={()=>{this.AddCart(this.props.viewproduct)}}>AddtoCart</button> : <div>Out Of Stock</div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default ProductView;\n","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Cart.js",["66"],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Profile.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Menu.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Order.js",["67","68"],"import React,{Component} from 'react';\n\nclass Order extends Component{\n  state={\n    orders:[],\n    products:[]\n  }\n\n\n  componentDidMount(){\n    if(this.props.emailId !== \"\")\n    {\n      const values = {\n        mailId:this.props.emailId\n      } \n\n      const headers = {\n        method:'GET', \n        credentials: 'include'\n      };\n\n      fetch( `http://localhost:3000/order/${this.props.emailId}`, headers)\n        .then(response=>response.json())\n        .then(response=>{\n          this.setState({\n            orders:response\n          })\n        })\n        .catch(err=>console.log(err))\n\n      fetch( `http://localhost:3000/products`, headers)\n        .then(response=>response.json())\n        .then(response=>{\n          this.setState({\n            products:response\n          })\n        })\n        .catch(err=>console.log(err))\n    } \n  }\n\n  cancel = (e,quantity) => {\n\n    let product = this.state.orders.filter(p => p.ProductId !== e)\n\n    console.log(product)\n    this.setState({\n      orders:product\n    })\n\n    const values = {\n      mailId:this.props.emailId,\n      ProductId:e\n    }\n\n    const headers = {\n      method:'DELETE', \n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(values)\n    };\n\n    fetch( `http://localhost:3000/order`, headers)\n    .then(response=>response)\n    .catch(err=>console.log(err))\n\n    const quantityOfHeaders = {\n      method:'GET', \n      credentials: 'include'\n    };\n\n    let quantityValues = {\n      id: e,\n      quantity:0\n    }\n\n    fetch( `http://localhost:3000/products/${e}`, quantityOfHeaders)\n    .then(response=>response.json())\n    .then(response=>{\n        quantityValues.quantity = response[0].quantity+quantity\n\n        const quantityHeaders = {\n          method:'PUT', \n          credentials: 'include',\n          headers: { 'Content-Type': 'application/json' },\n          body:JSON.stringify(quantityValues)\n        };\n\n        fetch( `http://localhost:3000/products/`, quantityHeaders)\n        .then(response=>response.json())\n        .then(response=>response)\n        .catch(err=>console.log(err))\n    })\n    .catch(err=>console.log(err))\n\n  }\n\n  render(){\n    return (\n      <div>\n        <div onClick={()=>{this.props.history.push('./cart')}}>Cart</div>\n        <h1>Your Orders</h1>\n        <div className=\"d-flex\">\n        {\n          this.state.orders.length === 0  ? <div>Order is Empty</div>\n              :  this.state.orders.map((order,i)=>{\n                let product= this.state.products.filter(p => p._id === order.ProductId)\n                  return(\n                    product.length !== 0 ? \n                      <div key={i}>\n                        <img src={`/${product[0].img}`} alt=\"product-image\" style={{width:\"180px\",height:\"180px\"}} ></img>\n                        <div>{product[0].name}</div>\n                        <div>{product[0].flavour}</div>\n                        <div>Quantity : {order.quantity}</div>\n                        {order.Tracking !== \"delivered\" ?<div>{order.Tracking} <button onClick={()=>{this.cancel(order.ProductId,order.quantity)}}>Cancel</button></div>:<div>{order.Tracking}</div>}\n                      </div>\n                      :<div  key={i}></div>\n                )\n             })\n        }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/AdminProducts.js",["69"],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/CheckOrders.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":241,"column":21,"nodeType":"76","endLine":241,"endColumn":109},{"ruleId":"74","severity":1,"message":"75","line":74,"column":9,"nodeType":"76","endLine":74,"endColumn":112},{"ruleId":"74","severity":1,"message":"75","line":221,"column":21,"nodeType":"76","endLine":221,"endColumn":109},{"ruleId":"77","severity":1,"message":"78","line":13,"column":13,"nodeType":"79","messageId":"80","endLine":13,"endColumn":19},{"ruleId":"74","severity":1,"message":"75","line":111,"column":25,"nodeType":"76","endLine":111,"endColumn":117},{"ruleId":"74","severity":1,"message":"75","line":36,"column":21,"nodeType":"76","endLine":36,"endColumn":109},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'values' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]