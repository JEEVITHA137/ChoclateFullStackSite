[{"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/index.js":"1","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/reportWebVitals.js":"2","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/App.js":"3","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Menu.js":"4","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Profile.js":"5","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/CheckOrders.js":"6","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/AddProduct.js":"7","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Cart.js":"8","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Products.js":"9","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/ProductView.js":"10","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Signin.js":"11","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Order.js":"12","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Login.js":"13","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/AdminProducts.js":"14","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/hostname.js":"15"},{"size":642,"mtime":1610470777000,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1607754394000,"results":"18","hashOfConfig":"17"},{"size":510,"mtime":1611059863000,"results":"19","hashOfConfig":"17"},{"size":7164,"mtime":1611944744000,"results":"20","hashOfConfig":"17"},{"size":9645,"mtime":1612205231000,"results":"21","hashOfConfig":"17"},{"size":2351,"mtime":1611849930000,"results":"22","hashOfConfig":"17"},{"size":4273,"mtime":1611850820000,"results":"23","hashOfConfig":"17"},{"size":9186,"mtime":1612205438000,"results":"24","hashOfConfig":"17"},{"size":7851,"mtime":1612205215000,"results":"25","hashOfConfig":"17"},{"size":5853,"mtime":1612205197000,"results":"26","hashOfConfig":"17"},{"size":5990,"mtime":1612163344000,"results":"27","hashOfConfig":"17"},{"size":3726,"mtime":1612027863000,"results":"28","hashOfConfig":"17"},{"size":3852,"mtime":1612197384000,"results":"29","hashOfConfig":"17"},{"size":3445,"mtime":1611943752000,"results":"30","hashOfConfig":"17"},{"size":134,"mtime":1611942907000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1w5eczn",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/index.js",[],["67","68"],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/reportWebVitals.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/App.js",[],["69","70"],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Menu.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Profile.js",["71"],"import React,{Component} from 'react';\nimport { hostname } from './hostname';\nimport {Card, Form, FormGroup, Label, Input,FormText} from 'reactstrap';\n\nclass Profile extends Component{\n  state = {\n    userDetails:[],\n    HouseNo:\"\",\n    Street:\"\",\n    LandMark:\"\",\n    Town:\"\",\n    District:\"\",\n    Pincode:\"\",\n    edit:false,\n    name:\"\",\n    mailId:\"\",\n    phoneNo:\"\",\n    error:\"\"\n  };\n\n  componentDidMount(){\n    if(this.props.emailId !== \"\")\n    {\n      const headers = {\n        method:'GET'\n      };\n\n      fetch( `${hostname}users/${this.props.emailId}`, headers)\n        .then(response=>response.json())\n        .then(response=>{\n          this.setState({\n            name:response[0].name,\n            mailId:response[0].mailId,\n            phoneNo:response[0].phoneNo,\n            HouseNo:response[0].address.HouseNo,\n            Street:response[0].address.Street,\n            LandMark:response[0].address.LandMark,\n            Town:response[0].address.Town,\n            District:response[0].address.District,\n            Pincode:response[0].address.Pincode,\n          })\n        })\n        .catch(err=>console.log(err))\n    } \n  }\n\n  editProfile = () => {\n    this.setState({\n      edit:true\n    })\n  }\n\n  uploadProfile = (e) => {\n    e.preventDefault();\n    if(this.state.Street !== null && this.state.LandMark !== null && this.state.Town !== null &&  this.state.District !== null && this.state.Pincode !== 0 && this.state.phoneNo !== 0)\n    {\n      const values = {\n        mailId:this.props.emailId,\n        name:this.state.name,\n        address:{\n          HouseNo:this.state.HouseNo,\n          Street:this.state.Street,\n          LandMark:this.state.LandMark,\n          Town:this.state.Town,\n          District:this.state.District,\n          Pincode:this.state.Pincode\n        },\n        phoneNo:this.state.phoneNo\n      }\n\n      const headers = {\n        method:'PUT', \n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(values)\n      };\n\n      fetch( `${hostname}users/profile`, headers)\n      .then(response=>response.json())\n      .then(response=>response)\n      .catch(err=>console.log(err))\n\n      this.setState({\n        edit:false,\n        error:\"\"\n      })\n    }\n    else\n    {\n      this.setState({\n        error:\"Enter the required fields\"\n      })\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"container\" style={{minHeight:'78vh'}}>\n        <div className=\"row mt-3\">\n          <h4 className=\" col-8\" style={{color:\"#0b498f\"}}>Profile</h4>\n          {this.state.edit\n                  ? null :\n          <div className=\"buton\" \n                  onClick={this.editProfile}>Edit Profile</div>}\n        </div>\n          {this.state.edit\n             ? \n             <Card  className=\"col-10 m-2 profile card shadow bg-white\">\n                <Form className=\"form\" onSubmit={(e) => this.uploadProfile(e)}>\n\n                    <h4 className=\"p-2\" style={{color:\"#0b498f\"}}>Edit Profile</h4>\n                    <FormGroup row >\n                        <Label className=\"col-4 text-center\" for=\"UName\" >Name:</Label>\n                        <div className=\"col-8 col-md-6 justify-content-center\">\n                            <input type=\"string\" style={{height:\"2rem\"}} id=\"EmailUNameId\" placeholder=\"Give your Name\"\n                              value={this.state.name} onChange={(e)=>{this.setState({name:e.target.value})}}/>\n                        </div>\n                    </FormGroup>\n                    <FormGroup row >\n                        <Label className=\"col-4 text-center\" for=\"HNo\" >HouseNo/FlatNo</Label>\n                        <div className=\"col-8 col-md-6 justify-content-center\">\n                            <input type=\"string\" style={{height:\"2rem\"}} id=\"HNo\" placeholder=\"Give your Flat No\"\n                            value={this.state.HouseNo} onChange={(e)=>{this.setState({HouseNo:e.target.value})}}/>\n                        </div>\n                    </FormGroup>\n                    \n                    <FormGroup row >\n                        <Label className=\"col-4 text-center\" for=\"Street\" >Street</Label>\n                        <div className=\"col-8 col-md-6 justify-content-center\">\n                            <input type=\"string\" style={{height:\"2rem\"}} id=\"Street\" placeholder=\"Give your Street\"\n                            value={this.state.Street} onChange={(e)=>{this.setState({Street:e.target.value})}}/>\n                        </div>\n                    </FormGroup>\n\n                    <FormGroup row>\n                        <Label className=\"col-4 text-center\" for=\"LandMark\" >LandMark</Label>\n                        <div className=\"col-8 col-md-6 justify-content-center\">\n                            <input type=\"string\" style={{height:\"2rem\"}} id=\"LandMark\" placeholder=\"Give your LandMark\"\n                            value={this.state.LandMark} onChange={(e)=>{this.setState({LandMark:e.target.value})}}/>\n                        </div>\n                    </FormGroup>\n\n                    <FormGroup row>\n                        <Label className=\"col-4 text-center\" for=\"Town\" >Town</Label>\n                        <div className=\"col-8 col-md-6 justify-content-center\">\n                            <input type=\"string\" style={{height:\"2rem\"}} id=\"Town\" placeholder=\"Give your Town\"\n                            value={this.state.Town} onChange={(e)=>{this.setState({Town:e.target.value})}}/>\n                        </div>\n                    </FormGroup>\n\n                    <FormGroup row>\n                        <Label className=\"col-4 text-center\" for=\"District\" >District</Label>\n                        <div className=\"col-8 col-md-6 justify-content-center\">\n                            <input type=\"string\" style={{height:\"2rem\"}} id=\"District\" placeholder=\"Give your District\"\n                            value={this.state.District} onChange={(e)=>{this.setState({District:e.target.value})}}/>\n                        </div>\n                    </FormGroup>\n\n                    <FormGroup row >\n                        <Label className=\"col-4 text-center\" for=\"Pincode\" >Pincode</Label>\n                        <div className=\"col-8 col-md-6 justify-content-center\">\n                            <input type=\"string\" style={{height:\"2rem\"}} id=\"Pincode\" placeholder=\"Give your Pincode\"\n                          value={this.state.Pincode} onChange={(e)=>{this.setState({Pincode:e.target.value})}}/>\n                        </div>\n                    </FormGroup>\n\n                    <FormGroup row >\n                        <Label className=\"col-4 text-center\" for=\"phoneNo\" >PhoneNo</Label>\n                        <div className=\"col-8 col-md-6 justify-content-center\">\n                            <input type=\"string\" style={{height:\"2rem\"}} id=\"phoneNo\" placeholder=\"Give your phoneNo\"\n                          value={this.state.phoneNo} onChange={(e)=>{this.setState({phoneNo:e.target.value})}}/>\n                        </div>\n                    </FormGroup>\n                    <FormText><h5>{this.state.error}</h5></FormText>\n                    <FormGroup className=\"row p-1\">\n                        <div className=\"col-4 offset-7\">\n                            <div className=\"buton\"\n                                type = \"submit\" onClick={(e) => this.uploadProfile(e)}>Update</div>\n                        </div>\n                    </FormGroup>\n                </Form>\n                </Card>\n             : \n\n             <Card  className=\"col-10 m-4 card shadow bg-white\">\n               <div className=\"row p-2 m-1\"><div style={{color:\"#0b498f\"}}>Name : </div><div className=\"pl-2\" style={{color:\"#068899\"}}>{this.state.name}</div></div>\n               <div className=\"row p-2 m-1\"><div style={{color:\"#0b498f\"}}>Email-Id : </div> <div className=\"pl-2\" style={{color:\"#068899\"}}>{this.state.mailId}</div></div>\n\n               <h5 className=\"row p-2 m-1 text-center\" style={{color:\"#0b498f\"}}>Address</h5>\n\n               <div className=\"row p-2 m-1\"><div style={{color:\"#0b498f\"}}>HouseNo/FlatNo : </div> <div className=\"pl-2\" style={{color:\"#068899\"}}>{this.state.HouseNo}</div></div>\n               <div className=\"row p-2 m-1\"><div style={{color:\"#0b498f\"}}>Street : </div> <div className=\"pl-2\" style={{color:\"#068899\"}}>{this.state.Street}</div></div>\n               <div className=\"row p-2 m-1\"><div style={{color:\"#0b498f\"}}>LandMark : </div> <div className=\"pl-2\" style={{color:\"#068899\"}}>{this.state.LandMark}</div></div>\n               <div className=\"row p-2 m-1\"><div style={{color:\"#0b498f\"}}>Town : </div> <div className=\"pl-2\" style={{color:\"#068899\"}}>{this.state.Town}</div></div>\n               <div className=\"row p-2 m-1\"><div style={{color:\"#0b498f\"}}>District : </div> <div className=\"pl-2\" style={{color:\"#068899\"}}>{this.state.District}</div></div>\n               {this.state.Pincode !==0 ? <div className=\"row p-2 m-1\"><div style={{color:\"#0b498f\"}}>Pincode : </div> <div className=\"pl-2\" style={{color:\"#068899\"}}>{this.state.Pincode}</div></div>:\n               <div className=\"row p-2 m-1\"><div style={{color:\"#0b498f\"}}>Pincode : </div> <div className=\"pl-2\" style={{color:\"#068899\"}}>-</div></div>}\n                 {this.state.phoneNo !==0 ? <div className=\"row p-2 m-1\" > <div style={{color:\"#0b498f\"}}>PhoneNo : </div> <div className=\"pl-2\" style={{color:\"#068899\"}}>{this.state.phoneNo}</div></div>:\n                      <div className=\"row p-2 m-1\" > <div style={{color:\"#0b498f\"}}>PhoneNo : </div> <div className=\"pl-2\" style={{color:\"#068899\"}}>-</div></div>}\n\n                </Card>\n          }\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/CheckOrders.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/AddProduct.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Cart.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Products.js",["72"],"import React,{Component} from 'react';\nimport {Card, CardImg, CardText, CardBody,CardTitle, CardSubtitle, UncontrolledCollapse} from 'reactstrap';\nimport { hostname } from './hostname';\n\nclass Products extends Component{\n\n  state = {\n        products:[],\n        brand:{},\n        flavour:{},\n        max:\"\",\n        min:\"\",\n        productsWithoutFilters:[],\n        isbrandfilter:false,\n        iscostfilter:false,\n        isflavourfilter:false,\n        isnoresults:false\n  };\n\n  componentDidMount(){\n    const headers = {\n        method:'GET'\n    };\n              \n    fetch( `${hostname}products`, headers)\n      .then(response=>response.json())\n      .then(response=>{\n        this.setState({\n          products:response,\n          productsWithoutFilters:response\n        })\n      })\n      .catch(err=>console.log(err))\n\n    fetch( `${hostname}products/brands`, headers)\n    .then(response=>response.json())  \n    .then(response=>{\n        let brand={};\n          response.map((res)=>{\n            brand[res] = false;\n            return null;\n          })\n\n          this.setState({\n            brand:brand\n          })\n      })\n    .catch(err=>console.log(err))\n\n    fetch( `${hostname}products/flavour`, headers)\n    .then(response=>response.json())  \n    .then(response=>{\n      let flavour={};\n      response.map((res)=>{\n        flavour[res] = false;\n        return null;\n      })\n\n      this.setState({\n        flavour:flavour\n      })\n  })\n    .catch(err=>console.log(err))\n  }\n\n  filter = () => {\n    let {productsWithoutFilters,flavour,isflavourfilter,brand,isbrandfilter,iscostfilter} = this.state;\n\n    let flavourproducts = [];\n\n    let i = 0;\n\n    isflavourfilter=false;\n    isbrandfilter = false;\n    iscostfilter = false;\n\n    Object.keys(flavour).map(function(key){\n      if(flavour[key])\n      {\n        isflavourfilter = true;\n        for(let j=0;j<productsWithoutFilters.length;j++)\n        {\n          if(productsWithoutFilters[j].flavour === key)\n          {\n            flavourproducts[i] = productsWithoutFilters[j];\n            i=i+1;\n          }\n        }\n      }\n      return null;\n    })\n\n    if(isflavourfilter)\n    {\n      productsWithoutFilters = flavourproducts\n    }\n\n    let brandproducts = [];\n    i=0;\n    Object.keys(brand).map(function(key){\n      if(brand[key])\n      {\n        isbrandfilter=true; \n        for(let j=0;j<productsWithoutFilters.length;j++)\n        {\n          if(productsWithoutFilters[j].brand === key)\n          {\n            brandproducts[i] = productsWithoutFilters[j];\n            i=i+1;\n          }\n        }\n      }\n      return null;\n    })\n\n    let costproducts = [];\n    \n    if(this.state.min !== \"\" && this.state.max !== \"\")\n    {\n      if((isflavourfilter && isbrandfilter) || isbrandfilter)\n      {\n        productsWithoutFilters = brandproducts;\n      }\n      else if(isflavourfilter)\n      {\n        productsWithoutFilters = flavourproducts\n      }\n  \n      i = 0 ;\n      iscostfilter = true;\n\n      for(let j=0;j<productsWithoutFilters.length;j++){\n        var cost =  parseInt(productsWithoutFilters[j].cost);\n          if(cost >= this.state.min && cost <= this.state.max)\n          {\n              costproducts[i] = productsWithoutFilters[j];\n              i = i+1;\n          }   \n      }\n    }\n  \n    this.setState({\n      isbrandfilter:isbrandfilter,\n      iscostfilter:iscostfilter,\n      isflavourfilter:isflavourfilter\n    })\n\n    if((isflavourfilter && isbrandfilter && iscostfilter) || (isbrandfilter && iscostfilter) || (isflavourfilter && iscostfilter) || iscostfilter)\n    {\n      this.setState({\n        products:costproducts\n      })\n    }\n    else if((isbrandfilter && isflavourfilter) || isbrandfilter)\n    {\n      this.setState({\n        products:brandproducts\n      })\n    }\n    else if(isflavourfilter)\n    {\n      this.setState({\n        products:flavourproducts\n      })\n    }\n    else{\n      this.setState({\n        products:productsWithoutFilters\n      })\n    }\n    \n  }\n\n  flavourFilter = (e) => {\n    let {flavour} = this.state\n    flavour[e.target.value] = e.target.checked;\n\n    this.setState({\n      flavour:flavour\n    })\n\n    this.filter();\n  }\n\n  brandFilter = (e) => {\n    let {brand} = this.state;\n    brand[e.target.value] = e.target.checked;\n\n    this.setState({\n      brand:brand\n    })\n\n    this.filter();\n  }\n\n  viewProduct = (product) => {\n    this.props.getViewProduct(product);\n    this.props.history.push(\"/view\")\n  }\n\n  render(){\n    return (\n      <div className=\"container pt-4\" style={{minHeight:'80vh'}}>\n        <img src=\"./filter.png\" alt=\"Filter\" id=\"filter\" className=\"filter\"></img>\n        <div className=\"d-flex filters\">\n        <UncontrolledCollapse toggler=\"#filter\">\n        <div className=\"filters\">\n        <div>\n        <h6 color=\"primary\" id=\"brand\" style={{ marginBottom: '1rem' }}>Brand</h6>\n        {\n            Object.keys(this.state.brand).map((brands,i)=>{\n            return(\n              <UncontrolledCollapse toggler=\"#brand\">\n              <div key={i} className=\"row\" style={{\"fontSize\":\"15px\"}}>\n              <div className=\"col-2 p-2\" >\n              <input type=\"checkbox\" style={{\"height\":\"13px\"}} onChange={this.brandFilter} value={brands}/>\n              </div>\n              <div className=\"col-10\" ><label >{brands}</label>\n              </div>\n              </div></UncontrolledCollapse>\n            )\n          })\n        }\n        </div>\n        <div className=\"\" >\n        <h6 color=\"primary\" id=\"flavour\" style={{ marginBottom: '1rem' }}>Flavour</h6>\n        {\n          Object.keys(this.state.flavour).map((flavour,i)=>{\n            return(\n              <UncontrolledCollapse toggler=\"#flavour\">\n              <div key={i} className=\"row\" style={{\"fontSize\":\"15px\"}}>\n              <div className=\"col-2 p-1\" >\n              <input type=\"checkbox\" style={{\"height\":\"13px\"}} onChange={this.flavourFilter} value={flavour}/>\n              </div>\n              <div className=\"col-10\" > <label>{flavour}</label>\n              </div>\n              </div>\n              </UncontrolledCollapse>\n            ) \n          })\n        }\n        </div>\n        <div>\n        <h6>Cost</h6>\n        <div className=\"d-flex\" >\n        <label style={{\"fontSize\":\"15px\"}} className=\"p-1\">Min</label>\n        <div>\n        <input type=\"number\" value={this.state.min} onChange={(e)=>{this.setState({min:e.target.value,iscostfilter:false})}}/>\n        </div>\n        </div>\n        <div className=\"d-flex\" >\n        <label style={{\"fontSize\":\"15px\"}} className=\"p-1\">Max</label>\n        <div>\n        <input type=\"number\" value={this.state.max} onChange={(e)=>{this.setState({max:e.target.value,iscostfilter:false})}}/>\n        </div>\n        </div>\n        <div className=\"col-4\">\n                  <div className=\"buton\" onClick={this.filter}>Apply</div>\n        </div>\n        </div>\n        </div>\n        </UncontrolledCollapse>\n      <div className=\"container pt-5\" >\n      <div className=\"row justify-content-center\">\n        {\n          this.state.products.length === 0  ? <div>No results found</div>\n              :  this.state.products.map((product,i)=>{\n        return(\n          <Card  key={i}  className=\"col-md-3 m-3 product text-center\" onClick={()=>{this.viewProduct(product)}}>\n          <CardImg className=\"p-3\" style={{height:\"190px\"}} src={`${hostname}${product.img}`} alt=\"product-img\" />\n          <CardBody>\n            <CardTitle tag=\"h5\" style={{color:\"#0b498f\"}}>{product.name}</CardTitle>\n            <CardSubtitle tag=\"h6\" className=\"text-muted\">{product.brand}</CardSubtitle>\n            <CardText><div>{product.flavour}</div>\n                      <h5 style={{color:\"#0b498f\"}}>₹ {product.cost}</h5></CardText>\n          </CardBody>\n          </Card>   \n        )})\n        }\n        </div>\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Products;\n","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/ProductView.js",["73","74"],"import React,{Component} from 'react';\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Input , Modal,ModalHeader,ModalFooter\n} from 'reactstrap';\nimport { hostname } from './hostname';\n\nclass ProductView extends Component{\n  state={\n    cart:[],\n    review:\"\",\n    reviewArray:[]\n  }\n\n  componentDidMount(){\n\n    const headers = {\n      method:'GET'\n    };\n\n    fetch(`${hostname}products/${this.props.viewproduct._id}`, headers)\n    .then(response=>response.json())\n    .then(response=>{\n      this.setState({\n        reviewArray:response[0].reviews\n      })\n    })\n\n    .catch(err=>console.log(err))\n    if(this.props.emailId !== \"\")\n    {\n      const headers = {\n        method:'GET'\n      };\n\n      fetch(`${hostname}users/${this.props.emailId}`, headers)\n      .then(response=>response.json())\n      .then(response=>{\n        this.setState({\n          cart:response[0].myCart,\n          islogin:true\n        })\n      })\n      .catch(err=>console.log(err))\n    }\n    else\n    {\n      this.setState({\n        cart:this.props.cart\n      })\n    }\n  }\n\n  ispresentincart = (e) => {\n    let existingproduct = this.state.cart.filter(p => p._id === e)\n    if(existingproduct.length > 0)\n    {\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n\n  toggle = () =>{\n    this.setState({\n      modal:!this.state.modal\n    })\n  }\n\n  reviewChange = (e) => {\n    if(this.props.emailId === \"\")\n    {\n      this.toggle();\n    }\n    else\n    {\n      this.setState({\n        review:e.target.value\n      })\n    }\n  }\n\n  reviewSubmit = (id) => {\n    if(this.props.emailId === \"\")\n    {\n      this.toggle();\n    }\n    else\n    {\n      const reviewProduct = {\n        user:this.props.user,\n        reviews:this.state.review\n      }\n\n      this.setState({\n        reviewArray:[...this.state.reviewArray,reviewProduct],\n        review:\"\"\n      });\n\n      const values = {\n        id:id,\n        reviews:this.state.reviewArray.concat(reviewProduct)\n      }\n\n      console.log(values)\n\n      const headers = {\n        method:'PUT', \n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(values)\n      };\n  \n      fetch( `${hostname}products/reviews`, headers)\n      .then(response=>response.json())\n      .then(response=>response)\n      .catch(err=>console.log(err))\n    }\n  }\n  \n  AddCart=(e)=>{\n    const cartproduct = {\n      _id:e._id,\n      name:e.name,\n      flavour:e.flavour,\n      cost:e.cost,\n      quantity:1,\n      brand:e.brand,\n      img:e.img\n    }\n\n    this.setState({\n      cart:[...this.state.cart,cartproduct]\n    });\n\n    if(this.props.emailId !== \"\")\n    {\n      const values = {\n        mailId:this.props.emailId,\n        cart:this.state.cart.concat(cartproduct)\n      }\n\n      const headers = {\n        method:'PUT', \n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(values)\n      };\n  \n      fetch( `${hostname}users/addtocart`, headers)\n      .then(response=>response.json())\n      .then(response=>response)\n      .catch(err=>console.log(err))\n    }\n    else{\n      this.props.getCart(cartproduct);\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"container\" style={{minHeight:'77vh'}} >\n        <h3 className=\"mt-3\" style={{color:\"#0c73c2\"}}>Product View</h3>\n        <div className=\"row \">\n        <Card className=\"col-md-5 p-3 m-3 shadow bg-white \" >\n        <CardImg  width=\"100%\" style={{height:\"350px\"}} src={`${hostname}${this.props.viewproduct.img}`} alt=\"product-img\" />\n        </Card>  \n        <CardBody>\n          <CardTitle tag=\"h5\" style={{color:\"#068899\"}}>{this.props.viewproduct.name}</CardTitle>\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{this.props.viewproduct.brand}</CardSubtitle>\n          <CardText><div>{this.props.viewproduct.flavour}</div>\n                    <div style={{color:\"#0c73c2\"}}>₹ {this.props.viewproduct.cost}</div></CardText>\n          {\n          this.ispresentincart(this.props.viewproduct._id) === true ?\n          <div disabled=\"true\" className=\"cartbuton\" >In Cart<img src='../cart.svg' alt=\"cart\"  style={{width:\"40px\",height:\"40px\"}}></img></div> \n          : this.props.viewproduct.quantity !== 0 ?\n           <div className=\"cartbuton\" onClick={()=>{this.AddCart(this.props.viewproduct)}}>Add to Cart<img src='../cart.svg' alt=\"cart\" style={{width:\"40px\",height:\"40px\"}}></img></div> :\n           <div disabled=\"true\" className=\"buton\">Out of Stock</div> \n        }\n        </CardBody>\n        </div> \n        <p>Reviews</p>\n        <Input type=\"string\" style={{height:\"7rem\",width:\"80%\"}} placeholder=\"Write Your Reviews\"  value={this.state.review} onChange={this.reviewChange}/>\n        <div className=\"buton mt-1\" onClick={()=>{this.reviewSubmit(this.props.viewproduct._id)}}>Submit</div>\n        <div>{this.state.reviews}</div>\n\n        {this.state.reviewArray.length !== 0 \n                ? this.state.reviewArray.map((review,i)=>{\n                  return(\n                      <div key={i} className=\"m-2 pb-2\">\n                        <div className=\"d-flex\">\n                          <img src=\"./user.png\" style={{width:\"35px\",height:\"35px\"}} alt=\"User\"></img>\n                          <h6 className=\"p-2\" style={{color:\"#068899\"}}>{review.user}</h6>\n                        </div>\n                        <h6 className=\"pl-4\" style={{color:\"grey\"}}>{review.reviews}</h6>\n                      </div>\n                  )\n                  })\n                :<div></div>}\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <div className=\"info\" style={{fontSize:\"20px\"}} toggle={this.toggle}>You need to login to write a review</div>\n          <div className=\"buton mb-2\" style={{transform:\"translateX(170%)\"}}  onClick={()=>{this.props.history.push('./login')}}>Login</div>{' '}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ProductView;\n","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Signin.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Order.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Login.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/AdminProducts.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/hostname.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"75","replacedBy":"79"},{"ruleId":"77","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":3,"column":39,"nodeType":"83","messageId":"84","endLine":3,"endColumn":44},{"ruleId":"81","severity":1,"message":"85","line":2,"column":90,"nodeType":"83","messageId":"84","endLine":2,"endColumn":96},{"ruleId":"81","severity":1,"message":"86","line":4,"column":42,"nodeType":"83","messageId":"84","endLine":4,"endColumn":53},{"ruleId":"81","severity":1,"message":"87","line":4,"column":54,"nodeType":"83","messageId":"84","endLine":4,"endColumn":65},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],["88"],["89"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","no-global-assign","no-unsafe-negation"]