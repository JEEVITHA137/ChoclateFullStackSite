[{"C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\index.js":"1","C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\App.js":"2","C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\reportWebVitals.js":"3","C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\Menu.js":"4","C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\Signin.js":"5","C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\Products.js":"6","C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\Login.js":"7","C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\Order.js":"8","C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\Profile.js":"9","C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\AdminProducts.js":"10","C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\ProductView.js":"11","C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\Cart.js":"12","C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\AddProduct.js":"13","C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\CheckOrders.js":"14"},{"size":663,"mtime":1609677185330,"results":"15","hashOfConfig":"16"},{"size":536,"mtime":1609605949608,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1607388323913,"results":"18","hashOfConfig":"16"},{"size":5040,"mtime":1609782348397,"results":"19","hashOfConfig":"16"},{"size":5603,"mtime":1609684230256,"results":"20","hashOfConfig":"16"},{"size":7633,"mtime":1609786124861,"results":"21","hashOfConfig":"16"},{"size":3365,"mtime":1609684308293,"results":"22","hashOfConfig":"16"},{"size":3325,"mtime":1609595917927,"results":"23","hashOfConfig":"16"},{"size":8400,"mtime":1609247343109,"results":"24","hashOfConfig":"16"},{"size":1332,"mtime":1609167430149,"results":"25","hashOfConfig":"16"},{"size":3183,"mtime":1609787181443,"results":"26","hashOfConfig":"16"},{"size":8557,"mtime":1609680728768,"results":"27","hashOfConfig":"16"},{"size":4282,"mtime":1609210980369,"results":"28","hashOfConfig":"16"},{"size":2353,"mtime":1607388323850,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1pdc24f",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\index.js",[],["61","62"],"C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\App.js",[],"C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\reportWebVitals.js",[],"C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\Menu.js",[],"C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\Signin.js",["63"],"import React,{Component} from 'react';\r\nimport {  Button, Form, FormGroup, Label, Input,FormText} from 'reactstrap';\r\n\r\nclass Signin extends Component{\r\n  state = {\r\n    name:\"\",\r\n    mailId:\"\",\r\n    pass:\"\",\r\n    NameError:\"\",\r\n    EmailError:\"\",\r\n    PassError:\"\",\r\n    signin:[],\r\n    login:false,\r\n    EmailValid:\"\",\r\n    NameValud:\"\",\r\n    PassValid:\"\"\r\n  };\r\n\r\n  submit= (e) =>{\r\n    e.preventDefault();\r\n    let error = 0;\r\n    if(this.state.name===\"\")\r\n    {\r\n      error=1;\r\n      this.setState({\r\n      NameError:\"Must Enter Inputs\"\r\n      })\r\n    }\r\n    if(this.state.mailId===\"\")\r\n    {\r\n      error=1;\r\n      this.setState({\r\n      EmailError:\"Must Enter Inputs\"\r\n      })\r\n    }\r\n    if(this.state.pass===\"\")\r\n    {\r\n      error=1;\r\n      this.setState({\r\n      PassError:\"Must Enter Inputs\"\r\n      })\r\n    }\r\n\r\n    if(error===0 && this.state.EmailError === \"\" && this.state.NameError === \"\" && this.state.PassError === \"\")\r\n    {\r\n        this.props.getEmail(this.state.mailId);\r\n        \r\n        const values = {\r\n          name: this.state.name,\r\n          mailId: this.state.mailId,\r\n          passWord: this.state.pass,\r\n          address:{\r\n            HouseNo:\"\",\r\n            Street:\"\",\r\n            LandMark:\"\",\r\n            Town:\"\",\r\n            District:\"\",\r\n            Pincode:0\r\n           },\r\n           phoneNo:0\r\n        }\r\n\r\n        const headers = {\r\n          method:'POST', \r\n          credentials: 'include',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(values)\r\n        };\r\n\r\n    fetch( `http://localhost:3000/users`, headers)\r\n        .then(response=>response.json())\r\n        .catch((err)=>{\r\n        console.log(err)\r\n        this.setState({\r\n            EmailError:\"Already exist\"\r\n        });\r\n        })\r\n\r\n        this.props.history.push('./');\r\n    }\r\n  }\r\n\r\n  handleEmailChange = (e) => {\r\n    this.setState({\r\n      mailId:e.target.value\r\n    })\r\n    if(this.state.mailId.length<5)\r\n    {\r\n      this.setState({\r\n      EmailError:\"Email must be at the Correct format\",\r\n      EmailValid:\"\"\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n      EmailError:\"\",\r\n      EmailValid:\"valid\"\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  handleNameChange = (e) => {\r\n    let alph=/^[a-zA-Z]+$/\r\n    this.setState({\r\n      name:e.target.value\r\n    })\r\n    if(this.state.name.length<4)\r\n    {\r\n      this.setState({\r\n      NameError:\"Username needs to be atleast 5 characters long\",\r\n      NameValid:\"\"\r\n      })\r\n    }\r\n    else if(!(alph.test(this.state.name))){\r\n      this.setState({\r\n      NameError:\"Must be an alphabetics only\",\r\n      NameValid:\"\",\r\n      })\r\n    }\r\n    else{\r\n      this.setState({\r\n      NameError:\"\",\r\n      NameValid:\"valid\"\r\n      })\r\n    }\r\n  }\r\n\r\n  handlePassChange = (e) => {\r\n    let passRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/\r\n    this.setState({\r\n      pass:e.target.value\r\n    })\r\n    if(this.state.pass.length<6)\r\n    {\r\n      this.setState({\r\n        PassError:\"Must 6 letters\",\r\n        PassValid:\"\"\r\n      })\r\n    }\r\n    else if(!(passRegex.test(this.state.pass))){\r\n      this.setState({\r\n        PassError:\"Must had Capital,Small and Numeric letters\",\r\n        PassValid:\"\"\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n         PassError:\"\",\r\n         PassValid:\"valid\"\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"container pt-5\">\r\n      <Form className=\"login\" onSubmit={(e) => this.submit(e)}>\r\n          <h3 className=\"m-2\">Signin</h3>\r\n          \r\n          <FormText style={{color:\"whiite\"}}>{this.state.loginError}</FormText>\r\n\r\n          <FormGroup row className=\"p-2\">\r\n              <Label className=\"col-4 text-center\" for=\"EmailId\" ><h5>Email-Id:</h5></Label>\r\n              <div className=\"col-8 col-md-6 justify-content-center\">\r\n                  <Input type=\"string\" style={{height:\"2rem\"}} id=\"EmailId\" placeholder=\"Give your Email Id\"\r\n                     value={this.state.mailId} onChange={this.handleEmailChange} valid={this.state.EmailValid}/>\r\n                  <FormText>{this.state.EmailError}</FormText>\r\n              </div>\r\n          </FormGroup>\r\n        \r\n          <FormGroup row className=\"p-2\">\r\n              <Label className=\"col-4 text-center\" for=\"Username\" ><h5>Username:</h5></Label>\r\n              <div className=\"col-8 col-md-6 justify-content-center\">\r\n                  <Input type=\"string\" style={{height:\"2rem\"}} id=\"Username\" placeholder=\"Give your Username\"\r\n                     value={this.state.name} onChange={this.handleNameChange} valid={this.state.NameValid}/>\r\n                  <FormText>{this.state.NameError}</FormText>\r\n              </div>\r\n          </FormGroup>\r\n          \r\n          <FormGroup row className=\"p-2\">\r\n              <Label className=\"col-4 text-center\" for=\"Password\" ><h5>Password:</h5></Label>\r\n              <div className=\"col-8 col-md-6 justify-content-center\">\r\n                  <Input type=\"password\" style={{height:\"2rem\"}} id=\"Password\" placeholder=\"Give your Password\"\r\n                     value={this.state.pass} onChange={this.handlePassChange}  valid={this.state.PassValid}/>\r\n                  <FormText>{this.state.PassError}</FormText>\r\n              </div>\r\n          </FormGroup>\r\n          <FormGroup className=\"row p-2\">\r\n              <div className=\"col-4 offset-7\">\r\n                  <div className=\"buton\" type = \"submit\" onClick={this.submit}>Signin</div>\r\n              </div>\r\n          </FormGroup>\r\n          <h5>Already user?<a href=\"/login\"> Login</a></h5>\r\n      </Form>\r\n  \r\n  </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;\r\n","C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\Products.js",["64"],"C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\Login.js",["65"],"import React,{Component} from 'react';\r\nimport {  Button, Form, FormGroup, Label, Input,FormText } from 'reactstrap';\r\nclass Login extends Component{\r\n  state = {\r\n    mailId:\"\",\r\n    pass:\"\",\r\n    EmailError:\"\",\r\n    PassError:\"\",\r\n    login:[],\r\n    loginError:\"\",\r\n    istrue:false\r\n  };\r\n\r\n  submit= (e) =>{   \r\n    e.preventDefault();\r\n    let error = 0;\r\n    if(this.state.mailId===\"\")\r\n    {\r\n      error=1;\r\n      this.setState({\r\n      EmailError:\"Must Enter Inputs\"\r\n      })\r\n    }\r\n    if(this.state.pass===\"\")\r\n    {\r\n      error=1;\r\n      this.setState({\r\n      PassError:\"Must Enter Inputs\"\r\n      })\r\n    }\r\n\r\n    if(error === 0)\r\n    {\r\n        const headers = {\r\n          method:'GET', \r\n          credentials: 'include'\r\n        };\r\n          \r\n        fetch( `http://localhost:3000/users/${this.state.mailId}/${this.state.pass}`, headers)\r\n          .then(response=>response.json())\r\n          .then(response=>{\r\n            if(response.length > 0)\r\n            {\r\n              this.props.getEmail(this.state.mailId);\r\n              if(this.state.mailId === \"Admin@gmail.com\")\r\n              {\r\n                this.props.history.push('./adminproducts');\r\n              }\r\n              else\r\n                 this.props.history.push('./');\r\n            }\r\n            else{\r\n              this.setState({\r\n                loginError:\"Incorrect username and password\"\r\n              })\r\n            }\r\n          })\r\n          .catch(err=>console.log(err))\r\n    }\r\n  }\r\n\r\n  handleEmailChange = (e) => {\r\n    this.setState({\r\n      mailId:e.target.value\r\n    })\r\n  }\r\n\r\n  handlePassChange = (e) => {\r\n    this.setState({\r\n      pass:e.target.value\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"container pt-5\">\r\n      <Form className=\"login\" onSubmit={(e) => this.submit(e)}>\r\n          <h3 className=\"m-2\" >Login</h3>\r\n\r\n          <FormText>{this.state.loginError}</FormText>\r\n          \r\n          <FormGroup row className=\"p-2\">\r\n              <Label className=\"col-4 text-center\" for=\"EmailId\" ><h5>Email-Id:</h5></Label>\r\n              <div className=\"col-8 col-md-6 justify-content-center\">\r\n                  <Input type=\"string\" style={{height:\"2rem\"}} id=\"EmailId\" placeholder=\"Give your Email Id\"\r\n                     value={this.state.mailId} onChange={this.handleEmailChange} />\r\n                  <FormText>{this.state.EmailError}</FormText>\r\n              </div>\r\n          </FormGroup>\r\n          \r\n          <FormGroup row className=\"p-2\">\r\n              <Label className=\"col-4 text-center\" for=\"Password\" ><h5>Password:</h5></Label>\r\n              <div className=\"col-8 col-md-6 justify-content-center\">\r\n                  <Input  type=\"password\" style={{height:\"2rem\"}} id=\"Password\" placeholder=\"Give your Password\"\r\n                     value={this.state.pass} onChange={this.handlePassChange} />\r\n                  <FormText className=\"text-center p-1\">{this.state.PassError}</FormText>\r\n              </div>\r\n          </FormGroup>\r\n         \r\n          <FormGroup className=\"row p-2\">\r\n              <div className=\"col-4 offset-7\">\r\n                  <div className=\"buton\" type = \"submit\" onClick={this.submit}>Login</div>\r\n              </div>\r\n          </FormGroup>\r\n          <h5>New user?<a href=\"/signin\"> Signin</a></h5>\r\n      </Form>\r\n  \r\n  </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\Order.js",[],"C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\Profile.js",[],"C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\AdminProducts.js",[],"C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\ProductView.js",[],"C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\Cart.js",[],"C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\AddProduct.js",[],"C:\\Users\\Karthick paya\\ChoclateFullStackSite\\Client\\src\\Components\\CheckOrders.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":11,"nodeType":"72","messageId":"73","endLine":2,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":4,"column":28,"nodeType":"72","messageId":"73","endLine":4,"endColumn":34},{"ruleId":"70","severity":1,"message":"71","line":2,"column":11,"nodeType":"72","messageId":"73","endLine":2,"endColumn":17},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]