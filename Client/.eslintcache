[{"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/index.js":"1","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/App.js":"2","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/reportWebVitals.js":"3","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Signin.js":"4","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Login.js":"5","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Products.js":"6","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/AddProduct.js":"7","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/ProductView.js":"8","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Cart.js":"9","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Profile.js":"10","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Menu.js":"11","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Order.js":"12"},{"size":500,"mtime":1607754394000,"results":"13","hashOfConfig":"14"},{"size":2059,"mtime":1608816864000,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607754394000,"results":"16","hashOfConfig":"14"},{"size":3224,"mtime":1608645429000,"results":"17","hashOfConfig":"14"},{"size":1984,"mtime":1608660035000,"results":"18","hashOfConfig":"14"},{"size":6272,"mtime":1608826774000,"results":"19","hashOfConfig":"14"},{"size":1907,"mtime":1608126350000,"results":"20","hashOfConfig":"14"},{"size":2079,"mtime":1608826137000,"results":"21","hashOfConfig":"14"},{"size":3521,"mtime":1608829202000,"results":"22","hashOfConfig":"14"},{"size":261,"mtime":1608708377000,"results":"23","hashOfConfig":"14"},{"size":522,"mtime":1608816880000,"results":"24","hashOfConfig":"14"},{"size":2537,"mtime":1608829215000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1fxv2et",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/index.js",[],["54","55"],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/App.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/reportWebVitals.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Signin.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Login.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Products.js",["56"],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/AddProduct.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/ProductView.js",["57"],"import React,{Component} from 'react';\n\nclass ProductView extends Component{\n  state={\n    cart:[],\n    cartvalue:[]\n  }\n\n  componentDidMount(){\n    if(this.props.emailId !== \"\")\n    {\n      const headers = {\n        method:'GET', \n        credentials: 'include'\n      };\n  \n      fetch( `http://localhost:3000/users/${this.props.emailId}`, headers)\n      .then(response=>response.json())\n      .then(response=>{\n        this.setState({\n          cart:response[0].myCart\n        })\n      })\n      .catch(err=>console.log(err))\n    }\n\n  }\n\n  ispresentincart = (e) => {\n\n    let existingproduct = this.state.cart.filter(p => p._id === e)\n    if(existingproduct.length > 0)\n    {\n      return true;\n    }\n    else{\n      return false;\n    }\n   \n  }\n  \n  AddCart=(e)=>{\n    if(this.props.emailId !== \"\")\n    {\n      e.quantity = 1;\n      this.setState({\n        cart:[...this.state.cart,e]\n      });\n\n      const values = {\n        mailId:this.props.emailId,\n        cart:this.state.cart.concat(e)\n      }\n\n      const headers = {\n        method:'PUT', \n        credentials: 'include',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(values)\n      };\n  \n      fetch( `http://localhost:3000/users/addtocart`, headers)\n      .then(response=>response.json())\n      .then(response=>response)\n      .catch(err=>console.log(err))\n    }\n  }\n\n  render(){\n    return (\n      <div>\n        <h1>Product View</h1>\n        <div onClick={()=>{this.props.history.push('./cart')}}>Cart</div>\n        <img src={`/${this.props.viewproduct.img}`} style={{width:\"180px\",height:\"180px\"}} alt=\"product-image\"></img>\n        <div>{this.props.viewproduct.name}</div>\n        <div>{this.props.viewproduct.brand}</div>\n        <div>{this.props.viewproduct.flavour}</div>\n        <div>{this.props.viewproduct.cost}</div>\n        {\n          this.ispresentincart(this.props.viewproduct._id) === true ?<button>In Cart</button> : <button onClick={()=>{this.AddCart(this.props.viewproduct)}}>AddtoCart</button>\n        }\n      </div>\n    );\n  }\n}\n\nexport default ProductView;\n","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Cart.js",["58"],"import React,{Component} from 'react';\n\nclass Cart extends Component{\n  state={\n    cart:[],\n    orders:[]\n  }\n\n\n  componentDidMount(){\n    if(this.props.emailId !== \"\")\n    {\n      const headers = {\n        method:'GET', \n        credentials: 'include'\n      };\n  \n      fetch( `http://localhost:3000/users/${this.props.emailId}`, headers)\n      .then(response=>response.json())\n      .then(response=>{\n        this.setState({\n          cart:response[0].myCart\n        })\n      })\n      .catch(err=>console.log(err))\n    } \n  }\n\n  order = (e) => {\n    let cartproduct=[];\n    cartproduct = this.state.cart.filter(p => p._id !== e._id)\n\n    this.setState({\n      cart:cartproduct\n    })\n    \n    const values = {\n      UserId:this.props.emailId,\n      Tracking:\"ordered\",\n      quantity:e.quantity,\n      ProductId:e._id,\n      Address:{\n        Street:\" River\",\n        LandMark: \"Police Station\",\n        Town:\"Vellore\",\n        District:\"Vellore\",\n        Pincode:632107\n    }\n    }\n\n    const headers = {\n      method:'POST', \n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n      body:JSON.stringify(values)\n    };\n\n    fetch( `http://localhost:3000/order/`, headers)\n    .then(response=>response.json())\n    .then(response=>response)\n    .catch(err=>console.log(err))\n\n    const cartValues = {\n      mailId:this.props.emailId,\n      cart:cartproduct\n    }\n\n    const cartHeaders = {\n      method:'PUT', \n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(cartValues)\n    };\n\n    fetch( `http://localhost:3000/users/addtocart`, cartHeaders)\n    .then(response=>response.json())\n    .then(response=>response)\n    .catch(err=>console.log(err))\n  }\n\n\n  delete = (e) => {\n    let cartproduct = this.state.cart.filter(p => p._id !== e._id)\n\n    this.setState({\n      order:[...this.state.orders,e],\n      cart:cartproduct\n    })\n\n    const cartValues = {\n      mailId:this.props.emailId,\n      cart:cartproduct\n    }\n\n    const cartHeaders = {\n      method:'PUT', \n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(cartValues)\n    };\n\n    fetch( `http://localhost:3000/users/addtocart`, cartHeaders)\n    .then(response=>response.json())\n    .then(response=>response)\n    .catch(err=>console.log(err))\n  }\n\n  render(){\n    return (\n      <div>\n        <h1>Cart</h1>\n        <div className=\"d-flex\">\n        {\n          this.state.cart.length === 0  ? <div>Cart is Empty</div>\n              :  this.state.cart.map((product,i)=>{\n                  return(\n                    <div key={i}>\n                    <img src={`/${product.img}`} style={{width:\"180px\",height:\"180px\"}} alt=\"product-image\"></img>\n                    <div>{product.name}</div>\n                    <div>{product.brand}</div>\n                    <div>{product.flavour}</div>\n                    <div>{product.cost}</div>\n                    <div className=\"d-flex\">\n                       <button>+</button>\n                       <div>{product.quantity}</div>\n                       <button>-</button>\n                    </div>\n                    <button onClick={()=>{this.order(product)}}>Buy Now</button><br/>\n                    <button onClick={()=>{this.delete(product)}}>Delete</button>\n                  </div>\n                )})\n        }\n        </div>\n        <div onClick={()=>{this.props.history.push('./orders')}}>Order</div>\n      </div>\n    );\n  }\n}\n\nexport default Cart;\n","/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Profile.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Menu.js",[],"/Users/CrazyJ/Documents/Jeevitha/DollSite/Client/src/Components/Order.js",["59","60"],"import React,{Component} from 'react';\n\nclass Order extends Component{\n  state={\n    orders:[],\n    products:[]\n  }\n\n\n  componentDidMount(){\n    if(this.props.emailId !== \"\")\n    {\n      const values = {\n        mailId:this.props.emailId\n      } \n\n      const headers = {\n        method:'GET', \n        credentials: 'include'\n      };\n\n      fetch( `http://localhost:3000/order/${this.props.emailId}`, headers)\n        .then(response=>response.json())\n        .then(response=>{\n          this.setState({\n            orders:response\n          })\n        })\n        .catch(err=>console.log(err))\n\n      fetch( `http://localhost:3000/products`, headers)\n        .then(response=>response.json())\n        .then(response=>{\n          this.setState({\n            products:response\n          })\n        })\n        .catch(err=>console.log(err))\n    } \n  }\n\n  cancel = (e) => {\n\n    let product = this.state.orders.filter(p => p.ProductId !== e)\n\n    console.log(product)\n    this.setState({\n      orders:product\n    })\n\n    const values = {\n      mailId:this.props.emailId,\n      ProductId:e\n    }\n\n    const headers = {\n      method:'DELETE', \n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(values)\n    };\n\n    fetch( `http://localhost:3000/order`, headers)\n    .then(response=>response.json())\n    .then(response=>response)\n    .catch(err=>console.log(err))\n\n  }\n\n  render(){\n    return (\n      <div>\n        <div onClick={()=>{this.props.history.push('./cart')}}>Cart</div>\n        <h1>Your Orders</h1>\n        <div className=\"d-flex\">\n        {\n          this.state.orders.length === 0  ? <div>Order is Empty</div>\n              :  this.state.orders.map((order,i)=>{\n                let product= this.state.products.filter(p => p._id === order.ProductId)\n                  return(\n                    product.length !== 0 ? \n                      <div key={i}>\n                        <img src={`/${product[0].img}`} alt=\"product-image\" style={{width:\"180px\",height:\"180px\"}} ></img>\n                        <div>{product[0].name}</div>\n                        <div>{product[0].flavour}</div>\n                        <div>Quantity : {order.quantity}</div>\n                        {order.Tracking !== \"delivered\" ? <button onClick={()=>{this.cancel(order.ProductId)}}>Cancel</button>:<div></div>}\n                      </div>\n                      :<div  key={i}></div>\n                )\n             })\n        }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":240,"column":21,"nodeType":"67","endLine":240,"endColumn":109},{"ruleId":"65","severity":1,"message":"66","line":74,"column":9,"nodeType":"67","endLine":74,"endColumn":112},{"ruleId":"65","severity":1,"message":"66","line":118,"column":21,"nodeType":"67","endLine":118,"endColumn":109},{"ruleId":"68","severity":1,"message":"69","line":13,"column":13,"nodeType":"70","messageId":"71","endLine":13,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":83,"column":25,"nodeType":"67","endLine":83,"endColumn":117},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'values' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]